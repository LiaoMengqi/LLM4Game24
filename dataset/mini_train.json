[{"input": "5 13 7 9\n", "output": "(13) - (5) = 8, left: (13 - 5) = 8, 7, 9\n(7) + (8) = 15, left: (7 + (13 - 5)) = 15, 9\n(9) + (15) = 24, left: (9 + (7 + (13 - 5))) = 24\nreach 24! expression: (9 + (7 + (13 - 5)))"}, {"input": "5 13 7 9\n", "output": "(7) + (9) = 16, left: (7 + 9) = 16, 5, 13\n(16) - (5) = 11, left: ((7 + 9) - 5) = 11, 13\n(13) + (11) = 24, left: (13 + ((7 + 9) - 5)) = 24\nreach 24! expression: (13 + ((7 + 9) - 5))"}, {"input": "5 13 7 9\n", "output": "(13) + (9) = 22, left: (13 + 9) = 22, 5, 7\n(7) + (22) = 29, left: (7 + (13 + 9)) = 29, 5\n(29) - (5) = 24, left: ((7 + (13 + 9)) - 5) = 24\nreach 24! expression: ((7 + (13 + 9)) - 5)"}, {"input": "5 13 7 9\n", "output": "(7) - (13) = -6, left: (7 - 13) = -6, 5, 9\n(5) - (9) = -4, left: (5 - 9) = -4, (7 - 13) = -6\n(-6) * (-4) = 24, left: ((7 - 13) * (5 - 9)) = 24\nreach 24! expression: ((7 - 13) * (5 - 9))"}, {"input": "5 13 7 9\n", "output": "(7) - (5) = 2, left: (7 - 5) = 2, 13, 9\n(9) + (2) = 11, left: (9 + (7 - 5)) = 11, 13\n(13) + (11) = 24, left: (13 + (9 + (7 - 5))) = 24\nreach 24! expression: (13 + (9 + (7 - 5)))"}, {"input": "5 13 7 9\n", "output": "(9) - (13) = -4, left: (9 - 13) = -4, 5, 7\n(5) - (7) = -2, left: (5 - 7) = -2, (9 - 13) = -4\n(-4) * (-2) = 8, left: ((9 - 13) * (5 - 7)) = 8\nroll back, left: (5 - 7) = -2, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\nroll back, left: 5 13 7 9\n(13) + (9) = 22, left: (13 + 9) = 22, 5, 7\n(7) + (22) = 29, left: (7 + (13 + 9)) = 29, 5\n(29) - (5) = 24, left: ((7 + (13 + 9)) - 5) = 24\nreach 24! expression: ((7 + (13 + 9)) - 5)"}, {"input": "5 13 7 9\n", "output": "(7) / (9) = 7/9, left: (7 / 9) = 7/9, 5, 13\n(7/9) / (13) = 7/117, left: ((7 / 9) / 13) = 7/117, 5\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) / (13) = 5/13, left: (5 / 13) = 5/13, (7 / 9) = 7/9\nroll back, left: (7 / 9) = 7/9, 5, 13\nroll back, left: 5 13 7 9\n(7) + (9) = 16, left: (7 + 9) = 16, 5, 13\n(16) - (5) = 11, left: ((7 + 9) - 5) = 11, 13\n(13) + (11) = 24, left: (13 + ((7 + 9) - 5)) = 24\nreach 24! expression: (13 + ((7 + 9) - 5))"}, {"input": "5 13 7 9\n", "output": "(7) - (13) = -6, left: (7 - 13) = -6, 5, 9\n(9) / (-6) = -3/2, left: (9 / (7 - 13)) = -3/2, 5\n(-3/2) / (5) = -3/10, left: ((9 / (7 - 13)) / 5) = -3/10\nroll back, left: (9 / (7 - 13)) = -3/2, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) - (-6) = 15, left: (9 - (7 - 13)) = 15, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(5) - (9) = -4, left: (5 - 9) = -4, (7 - 13) = -6\n(-6) * (-4) = 24, left: ((7 - 13) * (5 - 9)) = 24\nreach 24! expression: ((7 - 13) * (5 - 9))"}, {"input": "5 13 7 9\n", "output": "(5) / (7) = 5/7, left: (5 / 7) = 5/7, 13, 9\n(5/7) / (9) = 5/63, left: ((5 / 7) / 9) = 5/63, 13\n(13) / (5/63) = 819/5, left: (13 / ((5 / 7) / 9)) = 819/5\nroll back, left: ((5 / 7) / 9) = 5/63, 13\nroll back, left: (5 / 7) = 5/7, 13, 9\nroll back, left: 5 13 7 9\n(7) - (5) = 2, left: (7 - 5) = 2, 13, 9\n(9) + (2) = 11, left: (9 + (7 - 5)) = 11, 13\n(13) + (11) = 24, left: (13 + (9 + (7 - 5))) = 24\nreach 24! expression: (13 + (9 + (7 - 5)))"}, {"input": "5 13 7 9\n", "output": "(5) + (13) = 18, left: (5 + 13) = 18, 7, 9\nroll back, left: 5 13 7 9\n(5) / (13) = 5/13, left: (5 / 13) = 5/13, 7, 9\n(5/13) / (9) = 5/117, left: ((5 / 13) / 9) = 5/117, 7\nroll back, left: (5 / 13) = 5/13, 7, 9\nroll back, left: 5 13 7 9\n(13) - (5) = 8, left: (13 - 5) = 8, 7, 9\n(7) + (8) = 15, left: (7 + (13 - 5)) = 15, 9\n(9) + (15) = 24, left: (9 + (7 + (13 - 5))) = 24\nreach 24! expression: (9 + (7 + (13 - 5)))"}, {"input": "5 13 7 9\n", "output": "(5) + (13) = 18, left: (5 + 13) = 18, 7, 9\n(18) / (7) = 18/7, left: ((5 + 13) / 7) = 18/7, 9\nroll back, left: (5 + 13) = 18, 7, 9\n(9) - (7) = 2, left: (9 - 7) = 2, (5 + 13) = 18\nroll back, left: (5 + 13) = 18, 7, 9\nroll back, left: 5 13 7 9\n(5) / (13) = 5/13, left: (5 / 13) = 5/13, 7, 9\n(7) / (5/13) = 91/5, left: (7 / (5 / 13)) = 91/5, 9\nroll back, left: (5 / 13) = 5/13, 7, 9\n(7) - (5/13) = 86/13, left: (7 - (5 / 13)) = 86/13, 9\nroll back, left: (5 / 13) = 5/13, 7, 9\n(9) + (5/13) = 122/13, left: (9 + (5 / 13)) = 122/13, 7\nroll back, left: (5 / 13) = 5/13, 7, 9\nroll back, left: 5 13 7 9\n(13) - (5) = 8, left: (13 - 5) = 8, 7, 9\n(7) + (8) = 15, left: (7 + (13 - 5)) = 15, 9\n(9) + (15) = 24, left: (9 + (7 + (13 - 5))) = 24\nreach 24! expression: (9 + (7 + (13 - 5)))"}, {"input": "5 13 7 9\n", "output": "(9) - (13) = -4, left: (9 - 13) = -4, 5, 7\n(5) + (7) = 12, left: (5 + 7) = 12, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\n(5) / (7) = 5/7, left: (5 / 7) = 5/7, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\n(7) + (-4) = 3, left: (7 + (9 - 13)) = 3, 5\n(5) / (3) = 5/3, left: (5 / (7 + (9 - 13))) = 5/3\nroll back, left: (7 + (9 - 13)) = 3, 5\nroll back, left: (9 - 13) = -4, 5, 7\n(7) * (-4) = -28, left: (7 * (9 - 13)) = -28, 5\nroll back, left: (9 - 13) = -4, 5, 7\n(5) * (-4) = -20, left: (5 * (9 - 13)) = -20, 7\nroll back, left: (9 - 13) = -4, 5, 7\nroll back, left: 5 13 7 9\n(13) + (9) = 22, left: (13 + 9) = 22, 5, 7\n(7) + (22) = 29, left: (7 + (13 + 9)) = 29, 5\n(29) - (5) = 24, left: ((7 + (13 + 9)) - 5) = 24\nreach 24! expression: ((7 + (13 + 9)) - 5)"}, {"input": "5 13 7 9\n", "output": "(7) - (13) = -6, left: (7 - 13) = -6, 5, 9\n(-6) / (9) = -2/3, left: ((7 - 13) / 9) = -2/3, 5\n(5) / (-2/3) = -15/2, left: (5 / ((7 - 13) / 9)) = -15/2\nroll back, left: ((7 - 13) / 9) = -2/3, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) * (-6) = -54, left: (9 * (7 - 13)) = -54, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) - (-6) = 15, left: (9 - (7 - 13)) = 15, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(-6) - (9) = -15, left: ((7 - 13) - 9) = -15, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) / (5) = 9/5, left: (9 / 5) = 9/5, (7 - 13) = -6\nroll back, left: (7 - 13) = -6, 5, 9\n(5) + (9) = 14, left: (5 + 9) = 14, (7 - 13) = -6\nroll back, left: (7 - 13) = -6, 5, 9\n(5) - (9) = -4, left: (5 - 9) = -4, (7 - 13) = -6\n(-6) * (-4) = 24, left: ((7 - 13) * (5 - 9)) = 24\nreach 24! expression: ((7 - 13) * (5 - 9))"}, {"input": "5 13 7 9\n", "output": "(5) / (7) = 5/7, left: (5 / 7) = 5/7, 13, 9\n(5/7) / (13) = 5/91, left: ((5 / 7) / 13) = 5/91, 9\n(9) + (5/91) = 824/91, left: (9 + ((5 / 7) / 13)) = 824/91\nroll back, left: ((5 / 7) / 13) = 5/91, 9\nroll back, left: (5 / 7) = 5/7, 13, 9\n(13) - (9) = 4, left: (13 - 9) = 4, (5 / 7) = 5/7\nroll back, left: (5 / 7) = 5/7, 13, 9\n(9) / (5/7) = 63/5, left: (9 / (5 / 7)) = 63/5, 13\n(63/5) - (13) = -2/5, left: ((9 / (5 / 7)) - 13) = -2/5\nroll back, left: (9 / (5 / 7)) = 63/5, 13\nroll back, left: (5 / 7) = 5/7, 13, 9\n(9) - (5/7) = 58/7, left: (9 - (5 / 7)) = 58/7, 13\nroll back, left: (5 / 7) = 5/7, 13, 9\nroll back, left: 5 13 7 9\n(7) - (5) = 2, left: (7 - 5) = 2, 13, 9\n(9) + (2) = 11, left: (9 + (7 - 5)) = 11, 13\n(13) + (11) = 24, left: (13 + (9 + (7 - 5))) = 24\nreach 24! expression: (13 + (9 + (7 - 5)))"}, {"input": "5 13 7 9\n", "output": "(7) / (9) = 7/9, left: (7 / 9) = 7/9, 5, 13\n(5) / (13) = 5/13, left: (5 / 13) = 5/13, (7 / 9) = 7/9\n(5/13) - (7/9) = -46/117, left: ((5 / 13) - (7 / 9)) = -46/117\nroll back, left: (5 / 13) = 5/13, (7 / 9) = 7/9\n(7/9) + (5/13) = 136/117, left: ((7 / 9) + (5 / 13)) = 136/117\nroll back, left: (5 / 13) = 5/13, (7 / 9) = 7/9\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) / (7/9) = 45/7, left: (5 / (7 / 9)) = 45/7, 13\nroll back, left: (7 / 9) = 7/9, 5, 13\nroll back, left: 5 13 7 9\n(7) + (9) = 16, left: (7 + 9) = 16, 5, 13\n(5) / (16) = 5/16, left: (5 / (7 + 9)) = 5/16, 13\n(13) - (5/16) = 203/16, left: (13 - (5 / (7 + 9))) = 203/16\nroll back, left: (5 / (7 + 9)) = 5/16, 13\nroll back, left: (7 + 9) = 16, 5, 13\n(16) - (5) = 11, left: ((7 + 9) - 5) = 11, 13\n(13) + (11) = 24, left: (13 + ((7 + 9) - 5)) = 24\nreach 24! expression: (13 + ((7 + 9) - 5))"}, {"input": "5 13 7 9\n", "output": "(9) - (13) = -4, left: (9 - 13) = -4, 5, 7\n(7) / (5) = 7/5, left: (7 / 5) = 7/5, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\n(5) + (7) = 12, left: (5 + 7) = 12, (9 - 13) = -4\n(-4) / (12) = -1/3, left: ((9 - 13) / (5 + 7)) = -1/3\nroll back, left: (5 + 7) = 12, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\n(5) - (7) = -2, left: (5 - 7) = -2, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\n(5) / (7) = 5/7, left: (5 / 7) = 5/7, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\n(7) + (-4) = 3, left: (7 + (9 - 13)) = 3, 5\nroll back, left: (9 - 13) = -4, 5, 7\n(5) / (-4) = -5/4, left: (5 / (9 - 13)) = -5/4, 7\nroll back, left: (9 - 13) = -4, 5, 7\n(-4) - (5) = -9, left: ((9 - 13) - 5) = -9, 7\nroll back, left: (9 - 13) = -4, 5, 7\n(-4) / (5) = -4/5, left: ((9 - 13) / 5) = -4/5, 7\n(-4/5) / (7) = -4/35, left: (((9 - 13) / 5) / 7) = -4/35\nroll back, left: ((9 - 13) / 5) = -4/5, 7\nroll back, left: (9 - 13) = -4, 5, 7\nroll back, left: 5 13 7 9\n(13) + (9) = 22, left: (13 + 9) = 22, 5, 7\n(7) + (22) = 29, left: (7 + (13 + 9)) = 29, 5\n(29) - (5) = 24, left: ((7 + (13 + 9)) - 5) = 24\nreach 24! expression: ((7 + (13 + 9)) - 5)"}, {"input": "5 13 7 9\n", "output": "(5) + (13) = 18, left: (5 + 13) = 18, 7, 9\n(7) * (18) = 126, left: (7 * (5 + 13)) = 126, 9\nroll back, left: (5 + 13) = 18, 7, 9\n(18) / (7) = 18/7, left: ((5 + 13) / 7) = 18/7, 9\nroll back, left: (5 + 13) = 18, 7, 9\n(7) + (18) = 25, left: (7 + (5 + 13)) = 25, 9\n(9) - (25) = -16, left: (9 - (7 + (5 + 13))) = -16\nroll back, left: (7 + (5 + 13)) = 25, 9\nroll back, left: (5 + 13) = 18, 7, 9\n(7) + (9) = 16, left: (7 + 9) = 16, (5 + 13) = 18\nroll back, left: (5 + 13) = 18, 7, 9\n(9) + (18) = 27, left: (9 + (5 + 13)) = 27, 7\nroll back, left: (5 + 13) = 18, 7, 9\nroll back, left: 5 13 7 9\n(5) / (13) = 5/13, left: (5 / 13) = 5/13, 7, 9\n(9) - (7) = 2, left: (9 - 7) = 2, (5 / 13) = 5/13\nroll back, left: (5 / 13) = 5/13, 7, 9\n(7) - (5/13) = 86/13, left: (7 - (5 / 13)) = 86/13, 9\nroll back, left: (5 / 13) = 5/13, 7, 9\n(9) - (5/13) = 112/13, left: (9 - (5 / 13)) = 112/13, 7\nroll back, left: (5 / 13) = 5/13, 7, 9\nroll back, left: 5 13 7 9\n(13) - (5) = 8, left: (13 - 5) = 8, 7, 9\n(7) + (8) = 15, left: (7 + (13 - 5)) = 15, 9\n(9) + (15) = 24, left: (9 + (7 + (13 - 5))) = 24\nreach 24! expression: (9 + (7 + (13 - 5)))"}, {"input": "5 13 7 9\n", "output": "(5) / (7) = 5/7, left: (5 / 7) = 5/7, 13, 9\n(13) / (5/7) = 91/5, left: (13 / (5 / 7)) = 91/5, 9\nroll back, left: (5 / 7) = 5/7, 13, 9\n(13) * (9) = 117, left: (13 * 9) = 117, (5 / 7) = 5/7\n(5/7) + (117) = 824/7, left: ((5 / 7) + (13 * 9)) = 824/7\nroll back, left: (13 * 9) = 117, (5 / 7) = 5/7\n(117) - (5/7) = 814/7, left: ((13 * 9) - (5 / 7)) = 814/7\nroll back, left: (13 * 9) = 117, (5 / 7) = 5/7\nroll back, left: (5 / 7) = 5/7, 13, 9\n(9) - (13) = -4, left: (9 - 13) = -4, (5 / 7) = 5/7\nroll back, left: (5 / 7) = 5/7, 13, 9\n(9) + (5/7) = 68/7, left: (9 + (5 / 7)) = 68/7, 13\nroll back, left: (5 / 7) = 5/7, 13, 9\n(5/7) / (9) = 5/63, left: ((5 / 7) / 9) = 5/63, 13\n(13) + (5/63) = 824/63, left: (13 + ((5 / 7) / 9)) = 824/63\nroll back, left: ((5 / 7) / 9) = 5/63, 13\nroll back, left: (5 / 7) = 5/7, 13, 9\nroll back, left: 5 13 7 9\n(7) - (5) = 2, left: (7 - 5) = 2, 13, 9\n(9) * (2) = 18, left: (9 * (7 - 5)) = 18, 13\n(13) * (18) = 234, left: (13 * (9 * (7 - 5))) = 234\nroll back, left: (9 * (7 - 5)) = 18, 13\nroll back, left: (7 - 5) = 2, 13, 9\n(9) + (2) = 11, left: (9 + (7 - 5)) = 11, 13\n(13) + (11) = 24, left: (13 + (9 + (7 - 5))) = 24\nreach 24! expression: (13 + (9 + (7 - 5)))"}, {"input": "5 13 7 9\n", "output": "(7) / (9) = 7/9, left: (7 / 9) = 7/9, 5, 13\n(13) + (7/9) = 124/9, left: (13 + (7 / 9)) = 124/9, 5\n(124/9) - (5) = 79/9, left: ((13 + (7 / 9)) - 5) = 79/9\nroll back, left: (13 + (7 / 9)) = 124/9, 5\nroll back, left: (7 / 9) = 7/9, 5, 13\n(13) - (7/9) = 110/9, left: (13 - (7 / 9)) = 110/9, 5\nroll back, left: (7 / 9) = 7/9, 5, 13\n(13) / (7/9) = 117/7, left: (13 / (7 / 9)) = 117/7, 5\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) - (13) = -8, left: (5 - 13) = -8, (7 / 9) = 7/9\n(7/9) - (-8) = 79/9, left: ((7 / 9) - (5 - 13)) = 79/9\nroll back, left: (5 - 13) = -8, (7 / 9) = 7/9\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) / (13) = 5/13, left: (5 / 13) = 5/13, (7 / 9) = 7/9\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) - (7/9) = 38/9, left: (5 - (7 / 9)) = 38/9, 13\n(13) * (38/9) = 494/9, left: (13 * (5 - (7 / 9))) = 494/9\nroll back, left: (5 - (7 / 9)) = 38/9, 13\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) / (7/9) = 45/7, left: (5 / (7 / 9)) = 45/7, 13\nroll back, left: (7 / 9) = 7/9, 5, 13\nroll back, left: 5 13 7 9\n(7) + (9) = 16, left: (7 + 9) = 16, 5, 13\n(16) - (5) = 11, left: ((7 + 9) - 5) = 11, 13\n(13) + (11) = 24, left: (13 + ((7 + 9) - 5)) = 24\nreach 24! expression: (13 + ((7 + 9) - 5))"}, {"input": "5 13 7 9\n", "output": "(7) - (13) = -6, left: (7 - 13) = -6, 5, 9\n(-6) / (9) = -2/3, left: ((7 - 13) / 9) = -2/3, 5\n(5) / (-2/3) = -15/2, left: (5 / ((7 - 13) / 9)) = -15/2\nroll back, left: ((7 - 13) / 9) = -2/3, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) + (-6) = 3, left: (9 + (7 - 13)) = 3, 5\n(3) - (5) = -2, left: ((9 + (7 - 13)) - 5) = -2\nroll back, left: (9 + (7 - 13)) = 3, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) * (-6) = -54, left: (9 * (7 - 13)) = -54, 5\n(-54) - (5) = -59, left: ((9 * (7 - 13)) - 5) = -59\nroll back, left: (9 * (7 - 13)) = -54, 5\n(5) / (-54) = -5/54, left: (5 / (9 * (7 - 13))) = -5/54\nroll back, left: (9 * (7 - 13)) = -54, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) / (-6) = -3/2, left: (9 / (7 - 13)) = -3/2, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) - (-6) = 15, left: (9 - (7 - 13)) = 15, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) / (5) = 9/5, left: (9 / 5) = 9/5, (7 - 13) = -6\n(9/5) / (-6) = -3/10, left: ((9 / 5) / (7 - 13)) = -3/10\nroll back, left: (9 / 5) = 9/5, (7 - 13) = -6\nroll back, left: (7 - 13) = -6, 5, 9\n(5) - (9) = -4, left: (5 - 9) = -4, (7 - 13) = -6\n(-6) * (-4) = 24, left: ((7 - 13) * (5 - 9)) = 24\nreach 24! expression: ((7 - 13) * (5 - 9))"}, {"input": "5 13 7 9\n", "output": "(7) - (13) = -6, left: (7 - 13) = -6, 5, 9\n(-6) / (9) = -2/3, left: ((7 - 13) / 9) = -2/3, 5\n(-2/3) - (5) = -17/3, left: (((7 - 13) / 9) - 5) = -17/3\nroll back, left: ((7 - 13) / 9) = -2/3, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) + (-6) = 3, left: (9 + (7 - 13)) = 3, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) * (-6) = -54, left: (9 * (7 - 13)) = -54, 5\n(-54) - (5) = -59, left: ((9 * (7 - 13)) - 5) = -59\nroll back, left: (9 * (7 - 13)) = -54, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) / (-6) = -3/2, left: (9 / (7 - 13)) = -3/2, 5\n(-3/2) / (5) = -3/10, left: ((9 / (7 - 13)) / 5) = -3/10\nroll back, left: (9 / (7 - 13)) = -3/2, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(9) - (-6) = 15, left: (9 - (7 - 13)) = 15, 5\n(5) + (15) = 20, left: (5 + (9 - (7 - 13))) = 20\nroll back, left: (9 - (7 - 13)) = 15, 5\n(15) / (5) = 3, left: ((9 - (7 - 13)) / 5) = 3\nroll back, left: (9 - (7 - 13)) = 15, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(-6) - (9) = -15, left: ((7 - 13) - 9) = -15, 5\nroll back, left: (7 - 13) = -6, 5, 9\n(5) / (9) = 5/9, left: (5 / 9) = 5/9, (7 - 13) = -6\nroll back, left: (7 - 13) = -6, 5, 9\n(5) + (9) = 14, left: (5 + 9) = 14, (7 - 13) = -6\n(-6) - (14) = -20, left: ((7 - 13) - (5 + 9)) = -20\nroll back, left: (5 + 9) = 14, (7 - 13) = -6\nroll back, left: (7 - 13) = -6, 5, 9\n(5) - (9) = -4, left: (5 - 9) = -4, (7 - 13) = -6\n(-6) / (-4) = 3/2, left: ((7 - 13) / (5 - 9)) = 3/2\nroll back, left: (5 - 9) = -4, (7 - 13) = -6\n(-6) * (-4) = 24, left: ((7 - 13) * (5 - 9)) = 24\nreach 24! expression: ((7 - 13) * (5 - 9))"}, {"input": "5 13 7 9\n", "output": "(5) / (7) = 5/7, left: (5 / 7) = 5/7, 13, 9\n(13) - (5/7) = 86/7, left: (13 - (5 / 7)) = 86/7, 9\n(9) / (86/7) = 63/86, left: (9 / (13 - (5 / 7))) = 63/86\nroll back, left: (13 - (5 / 7)) = 86/7, 9\nroll back, left: (5 / 7) = 5/7, 13, 9\n(13) + (5/7) = 96/7, left: (13 + (5 / 7)) = 96/7, 9\nroll back, left: (5 / 7) = 5/7, 13, 9\n(13) * (5/7) = 65/7, left: (13 * (5 / 7)) = 65/7, 9\n(9) - (65/7) = -2/7, left: (9 - (13 * (5 / 7))) = -2/7\nroll back, left: (13 * (5 / 7)) = 65/7, 9\nroll back, left: (5 / 7) = 5/7, 13, 9\n(9) / (13) = 9/13, left: (9 / 13) = 9/13, (5 / 7) = 5/7\n(5/7) / (9/13) = 65/63, left: ((5 / 7) / (9 / 13)) = 65/63\nroll back, left: (9 / 13) = 9/13, (5 / 7) = 5/7\nroll back, left: (5 / 7) = 5/7, 13, 9\n(9) - (13) = -4, left: (9 - 13) = -4, (5 / 7) = 5/7\n(5/7) / (-4) = -5/28, left: ((5 / 7) / (9 - 13)) = -5/28\nroll back, left: (9 - 13) = -4, (5 / 7) = 5/7\nroll back, left: (5 / 7) = 5/7, 13, 9\n(13) + (9) = 22, left: (13 + 9) = 22, (5 / 7) = 5/7\nroll back, left: (5 / 7) = 5/7, 13, 9\n(5/7) - (9) = -58/7, left: ((5 / 7) - 9) = -58/7, 13\nroll back, left: (5 / 7) = 5/7, 13, 9\n(9) * (5/7) = 45/7, left: (9 * (5 / 7)) = 45/7, 13\n(13) + (45/7) = 136/7, left: (13 + (9 * (5 / 7))) = 136/7\nroll back, left: (9 * (5 / 7)) = 45/7, 13\nroll back, left: (5 / 7) = 5/7, 13, 9\nroll back, left: 5 13 7 9\n(7) - (5) = 2, left: (7 - 5) = 2, 13, 9\n(9) * (2) = 18, left: (9 * (7 - 5)) = 18, 13\nroll back, left: (7 - 5) = 2, 13, 9\n(9) + (2) = 11, left: (9 + (7 - 5)) = 11, 13\n(13) + (11) = 24, left: (13 + (9 + (7 - 5))) = 24\nreach 24! expression: (13 + (9 + (7 - 5)))"}, {"input": "5 13 7 9\n", "output": "(9) - (13) = -4, left: (9 - 13) = -4, 5, 7\n(5) + (7) = 12, left: (5 + 7) = 12, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\n(5) * (7) = 35, left: (5 * 7) = 35, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\n(5) - (7) = -2, left: (5 - 7) = -2, (9 - 13) = -4\n(-4) / (-2) = 2, left: ((9 - 13) / (5 - 7)) = 2\nroll back, left: (5 - 7) = -2, (9 - 13) = -4\nroll back, left: (9 - 13) = -4, 5, 7\n(-4) / (7) = -4/7, left: ((9 - 13) / 7) = -4/7, 5\n(-4/7) - (5) = -39/7, left: (((9 - 13) / 7) - 5) = -39/7\nroll back, left: ((9 - 13) / 7) = -4/7, 5\nroll back, left: (9 - 13) = -4, 5, 7\n(7) * (-4) = -28, left: (7 * (9 - 13)) = -28, 5\n(5) + (-28) = -23, left: (5 + (7 * (9 - 13))) = -23\nroll back, left: (7 * (9 - 13)) = -28, 5\nroll back, left: (9 - 13) = -4, 5, 7\n(5) + (-4) = 1, left: (5 + (9 - 13)) = 1, 7\nroll back, left: (9 - 13) = -4, 5, 7\n(5) / (-4) = -5/4, left: (5 / (9 - 13)) = -5/4, 7\nroll back, left: (9 - 13) = -4, 5, 7\n(-4) - (5) = -9, left: ((9 - 13) - 5) = -9, 7\n(-9) / (7) = -9/7, left: (((9 - 13) - 5) / 7) = -9/7\nroll back, left: ((9 - 13) - 5) = -9, 7\nroll back, left: (9 - 13) = -4, 5, 7\n(5) * (-4) = -20, left: (5 * (9 - 13)) = -20, 7\n(-20) / (7) = -20/7, left: ((5 * (9 - 13)) / 7) = -20/7\nroll back, left: (5 * (9 - 13)) = -20, 7\nroll back, left: (9 - 13) = -4, 5, 7\nroll back, left: 5 13 7 9\n(13) + (9) = 22, left: (13 + 9) = 22, 5, 7\n(7) + (22) = 29, left: (7 + (13 + 9)) = 29, 5\n(29) - (5) = 24, left: ((7 + (13 + 9)) - 5) = 24\nreach 24! expression: ((7 + (13 + 9)) - 5)"}, {"input": "5 13 7 9\n", "output": "(5) + (13) = 18, left: (5 + 13) = 18, 7, 9\n(7) - (18) = -11, left: (7 - (5 + 13)) = -11, 9\nroll back, left: (5 + 13) = 18, 7, 9\n(7) / (9) = 7/9, left: (7 / 9) = 7/9, (5 + 13) = 18\n(7/9) / (18) = 7/162, left: ((7 / 9) / (5 + 13)) = 7/162\nroll back, left: (7 / 9) = 7/9, (5 + 13) = 18\n(18) + (7/9) = 169/9, left: ((5 + 13) + (7 / 9)) = 169/9\nroll back, left: (7 / 9) = 7/9, (5 + 13) = 18\nroll back, left: (5 + 13) = 18, 7, 9\n(9) - (18) = -9, left: (9 - (5 + 13)) = -9, 7\nroll back, left: (5 + 13) = 18, 7, 9\n(18) / (9) = 2, left: ((5 + 13) / 9) = 2, 7\n(2) - (7) = -5, left: (((5 + 13) / 9) - 7) = -5\nroll back, left: ((5 + 13) / 9) = 2, 7\nroll back, left: (5 + 13) = 18, 7, 9\nroll back, left: 5 13 7 9\n(5) / (13) = 5/13, left: (5 / 13) = 5/13, 7, 9\n(7) / (9) = 7/9, left: (7 / 9) = 7/9, (5 / 13) = 5/13\nroll back, left: (5 / 13) = 5/13, 7, 9\n(7) * (9) = 63, left: (7 * 9) = 63, (5 / 13) = 5/13\nroll back, left: (5 / 13) = 5/13, 7, 9\n(5/13) / (7) = 5/91, left: ((5 / 13) / 7) = 5/91, 9\n(9) * (5/91) = 45/91, left: (9 * ((5 / 13) / 7)) = 45/91\nroll back, left: ((5 / 13) / 7) = 5/91, 9\nroll back, left: (5 / 13) = 5/13, 7, 9\n(9) * (5/13) = 45/13, left: (9 * (5 / 13)) = 45/13, 7\nroll back, left: (5 / 13) = 5/13, 7, 9\n(5/13) / (9) = 5/117, left: ((5 / 13) / 9) = 5/117, 7\nroll back, left: (5 / 13) = 5/13, 7, 9\nroll back, left: 5 13 7 9\n(13) - (5) = 8, left: (13 - 5) = 8, 7, 9\n(7) + (8) = 15, left: (7 + (13 - 5)) = 15, 9\n(9) + (15) = 24, left: (9 + (7 + (13 - 5))) = 24\nreach 24! expression: (9 + (7 + (13 - 5)))"}, {"input": "5 13 7 9\n", "output": "(7) / (9) = 7/9, left: (7 / 9) = 7/9, 5, 13\n(13) * (7/9) = 91/9, left: (13 * (7 / 9)) = 91/9, 5\nroll back, left: (7 / 9) = 7/9, 5, 13\n(13) + (7/9) = 124/9, left: (13 + (7 / 9)) = 124/9, 5\nroll back, left: (7 / 9) = 7/9, 5, 13\n(7/9) - (13) = -110/9, left: ((7 / 9) - 13) = -110/9, 5\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) + (13) = 18, left: (5 + 13) = 18, (7 / 9) = 7/9\n(7/9) * (18) = 14, left: ((7 / 9) * (5 + 13)) = 14\nroll back, left: (5 + 13) = 18, (7 / 9) = 7/9\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) - (13) = -8, left: (5 - 13) = -8, (7 / 9) = 7/9\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) / (13) = 5/13, left: (5 / 13) = 5/13, (7 / 9) = 7/9\n(5/13) - (7/9) = -46/117, left: ((5 / 13) - (7 / 9)) = -46/117\nroll back, left: (5 / 13) = 5/13, (7 / 9) = 7/9\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) * (13) = 65, left: (5 * 13) = 65, (7 / 9) = 7/9\n(7/9) / (65) = 7/585, left: ((7 / 9) / (5 * 13)) = 7/585\nroll back, left: (5 * 13) = 65, (7 / 9) = 7/9\nroll back, left: (7 / 9) = 7/9, 5, 13\n(7/9) / (5) = 7/45, left: ((7 / 9) / 5) = 7/45, 13\nroll back, left: (7 / 9) = 7/9, 5, 13\n(5) * (7/9) = 35/9, left: (5 * (7 / 9)) = 35/9, 13\n(35/9) - (13) = -82/9, left: ((5 * (7 / 9)) - 13) = -82/9\nroll back, left: (5 * (7 / 9)) = 35/9, 13\nroll back, left: (7 / 9) = 7/9, 5, 13\n(7/9) - (5) = -38/9, left: ((7 / 9) - 5) = -38/9, 13\nroll back, left: (7 / 9) = 7/9, 5, 13\nroll back, left: 5 13 7 9\n(7) + (9) = 16, left: (7 + 9) = 16, 5, 13\n(16) - (5) = 11, left: ((7 + 9) - 5) = 11, 13\n(13) + (11) = 24, left: (13 + ((7 + 9) - 5)) = 24\nreach 24! expression: (13 + ((7 + 9) - 5))"}, {"input": "1 2 4 11\n", "output": "(1) - (11) = -10, left: (1 - 11) = -10, 2, 4\n(2) * (-10) = -20, left: (2 * (1 - 11)) = -20, 4\n(4) - (-20) = 24, left: (4 - (2 * (1 - 11))) = 24\nreach 24! expression: (4 - (2 * (1 - 11)))"}, {"input": "1 2 4 11\n", "output": "(4) - (2) = 2, left: (4 - 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 - 2) = 2\n(2) * (12) = 24, left: ((4 - 2) * (1 + 11)) = 24\nreach 24! expression: ((4 - 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(4) / (2) = 2, left: (4 / 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 / 2) = 2\n(2) * (12) = 24, left: ((4 / 2) * (1 + 11)) = 24\nreach 24! expression: ((4 / 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(2) / (4) = 1/2, left: (2 / 4) = 1/2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (2 / 4) = 1/2\n(12) / (1/2) = 24, left: ((1 + 11) / (2 / 4)) = 24\nreach 24! expression: ((1 + 11) / (2 / 4))"}, {"input": "1 2 4 11\n", "output": "(11) - (1) = 10, left: (11 - 1) = 10, 2, 4\n(2) * (10) = 20, left: (2 * (11 - 1)) = 20, 4\n(4) + (20) = 24, left: (4 + (2 * (11 - 1))) = 24\nreach 24! expression: (4 + (2 * (11 - 1)))"}, {"input": "1 2 4 11\n", "output": "(1) - (2) = -1, left: (1 - 2) = -1, 4, 11\nroll back, left: 1 2 4 11\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, 4, 11\nroll back, left: 1 2 4 11\n(2) - (1) = 1, left: (2 - 1) = 1, 4, 11\nroll back, left: 1 2 4 11\n(4) / (2) = 2, left: (4 / 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 / 2) = 2\n(2) * (12) = 24, left: ((4 / 2) * (1 + 11)) = 24\nreach 24! expression: ((4 / 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(2) * (4) = 8, left: (2 * 4) = 8, 1, 11\n(1) - (8) = -7, left: (1 - (2 * 4)) = -7, 11\n(11) - (-7) = 18, left: (11 - (1 - (2 * 4))) = 18\nroll back, left: (1 - (2 * 4)) = -7, 11\nroll back, left: (2 * 4) = 8, 1, 11\nroll back, left: 1 2 4 11\n(4) - (2) = 2, left: (4 - 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 - 2) = 2\n(2) * (12) = 24, left: ((4 - 2) * (1 + 11)) = 24\nreach 24! expression: ((4 - 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(2) * (11) = 22, left: (2 * 11) = 22, 1, 4\n(1) / (22) = 1/22, left: (1 / (2 * 11)) = 1/22, 4\n(4) + (1/22) = 89/22, left: (4 + (1 / (2 * 11))) = 89/22\nroll back, left: (1 / (2 * 11)) = 1/22, 4\nroll back, left: (2 * 11) = 22, 1, 4\nroll back, left: 1 2 4 11\n(2) / (4) = 1/2, left: (2 / 4) = 1/2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (2 / 4) = 1/2\n(12) / (1/2) = 24, left: ((1 + 11) / (2 / 4)) = 24\nreach 24! expression: ((1 + 11) / (2 / 4))"}, {"input": "1 2 4 11\n", "output": "(11) - (1) = 10, left: (11 - 1) = 10, 2, 4\n(4) * (10) = 40, left: (4 * (11 - 1)) = 40, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(4) - (10) = -6, left: (4 - (11 - 1)) = -6, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(10) / (4) = 5/2, left: ((11 - 1) / 4) = 5/2, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(2) * (10) = 20, left: (2 * (11 - 1)) = 20, 4\n(4) + (20) = 24, left: (4 + (2 * (11 - 1))) = 24\nreach 24! expression: (4 + (2 * (11 - 1)))"}, {"input": "1 2 4 11\n", "output": "(4) + (11) = 15, left: (4 + 11) = 15, 1, 2\nroll back, left: 1 2 4 11\n(1) * (2) = 2, left: (1 * 2) = 2, 4, 11\nroll back, left: 1 2 4 11\n(1) / (11) = 1/11, left: (1 / 11) = 1/11, 2, 4\nroll back, left: 1 2 4 11\n(1) - (11) = -10, left: (1 - 11) = -10, 2, 4\n(2) * (-10) = -20, left: (2 * (1 - 11)) = -20, 4\n(4) - (-20) = 24, left: (4 - (2 * (1 - 11))) = 24\nreach 24! expression: (4 - (2 * (1 - 11)))"}, {"input": "1 2 4 11\n", "output": "(11) / (2) = 11/2, left: (11 / 2) = 11/2, 1, 4\nroll back, left: 1 2 4 11\n(2) / (11) = 2/11, left: (2 / 11) = 2/11, 1, 4\nroll back, left: 1 2 4 11\n(4) + (11) = 15, left: (4 + 11) = 15, 1, 2\nroll back, left: 1 2 4 11\n(1) + (2) = 3, left: (1 + 2) = 3, 4, 11\n(4) * (11) = 44, left: (4 * 11) = 44, (1 + 2) = 3\n(3) * (44) = 132, left: ((1 + 2) * (4 * 11)) = 132\nroll back, left: (4 * 11) = 44, (1 + 2) = 3\nroll back, left: (1 + 2) = 3, 4, 11\nroll back, left: 1 2 4 11\n(2) - (1) = 1, left: (2 - 1) = 1, 4, 11\nroll back, left: 1 2 4 11\n(1) - (11) = -10, left: (1 - 11) = -10, 2, 4\n(2) * (-10) = -20, left: (2 * (1 - 11)) = -20, 4\n(4) - (-20) = 24, left: (4 - (2 * (1 - 11))) = 24\nreach 24! expression: (4 - (2 * (1 - 11)))"}, {"input": "1 2 4 11\n", "output": "(2) * (11) = 22, left: (2 * 11) = 22, 1, 4\nroll back, left: 1 2 4 11\n(2) - (11) = -9, left: (2 - 11) = -9, 1, 4\nroll back, left: 1 2 4 11\n(11) - (2) = 9, left: (11 - 2) = 9, 1, 4\n(9) - (4) = 5, left: ((11 - 2) - 4) = 5, 1\nroll back, left: (11 - 2) = 9, 1, 4\n(1) + (4) = 5, left: (1 + 4) = 5, (11 - 2) = 9\n(9) - (5) = 4, left: ((11 - 2) - (1 + 4)) = 4\nroll back, left: (1 + 4) = 5, (11 - 2) = 9\nroll back, left: (11 - 2) = 9, 1, 4\nroll back, left: 1 2 4 11\n(1) + (4) = 5, left: (1 + 4) = 5, 2, 11\nroll back, left: 1 2 4 11\n(2) / (4) = 1/2, left: (2 / 4) = 1/2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (2 / 4) = 1/2\n(12) / (1/2) = 24, left: ((1 + 11) / (2 / 4)) = 24\nreach 24! expression: ((1 + 11) / (2 / 4))"}, {"input": "1 2 4 11\n", "output": "(11) - (1) = 10, left: (11 - 1) = 10, 2, 4\n(10) - (4) = 6, left: ((11 - 1) - 4) = 6, 2\n(6) / (2) = 3, left: (((11 - 1) - 4) / 2) = 3\nroll back, left: ((11 - 1) - 4) = 6, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(4) / (10) = 2/5, left: (4 / (11 - 1)) = 2/5, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(2) * (4) = 8, left: (2 * 4) = 8, (11 - 1) = 10\nroll back, left: (11 - 1) = 10, 2, 4\n(10) - (2) = 8, left: ((11 - 1) - 2) = 8, 4\nroll back, left: (11 - 1) = 10, 2, 4\n(2) / (10) = 1/5, left: (2 / (11 - 1)) = 1/5, 4\n(4) * (1/5) = 4/5, left: (4 * (2 / (11 - 1))) = 4/5\nroll back, left: (2 / (11 - 1)) = 1/5, 4\nroll back, left: (11 - 1) = 10, 2, 4\n(2) * (10) = 20, left: (2 * (11 - 1)) = 20, 4\n(4) + (20) = 24, left: (4 + (2 * (11 - 1))) = 24\nreach 24! expression: (4 + (2 * (11 - 1)))"}, {"input": "1 2 4 11\n", "output": "(1) * (2) = 2, left: (1 * 2) = 2, 4, 11\nroll back, left: 1 2 4 11\n(1) + (4) = 5, left: (1 + 4) = 5, 2, 11\n(5) / (2) = 5/2, left: ((1 + 4) / 2) = 5/2, 11\nroll back, left: (1 + 4) = 5, 2, 11\nroll back, left: 1 2 4 11\n(1) * (4) = 4, left: (1 * 4) = 4, 2, 11\nroll back, left: 1 2 4 11\n(4) * (11) = 44, left: (4 * 11) = 44, 1, 2\n(1) / (44) = 1/44, left: (1 / (4 * 11)) = 1/44, 2\nroll back, left: (4 * 11) = 44, 1, 2\nroll back, left: 1 2 4 11\n(4) / (2) = 2, left: (4 / 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 / 2) = 2\n(12) - (2) = 10, left: ((1 + 11) - (4 / 2)) = 10\nroll back, left: (1 + 11) = 12, (4 / 2) = 2\n(2) * (12) = 24, left: ((4 / 2) * (1 + 11)) = 24\nreach 24! expression: ((4 / 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(2) * (4) = 8, left: (2 * 4) = 8, 1, 11\n(11) - (1) = 10, left: (11 - 1) = 10, (2 * 4) = 8\nroll back, left: (2 * 4) = 8, 1, 11\n(8) / (1) = 8, left: ((2 * 4) / 1) = 8, 11\nroll back, left: (2 * 4) = 8, 1, 11\nroll back, left: 1 2 4 11\n(4) - (2) = 2, left: (4 - 2) = 2, 1, 11\n(11) * (2) = 22, left: (11 * (4 - 2)) = 22, 1\n(1) + (22) = 23, left: (1 + (11 * (4 - 2))) = 23\nroll back, left: (11 * (4 - 2)) = 22, 1\nroll back, left: (4 - 2) = 2, 1, 11\n(2) - (11) = -9, left: ((4 - 2) - 11) = -9, 1\n(-9) - (1) = -10, left: (((4 - 2) - 11) - 1) = -10\nroll back, left: ((4 - 2) - 11) = -9, 1\nroll back, left: (4 - 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 - 2) = 2\n(2) * (12) = 24, left: ((4 - 2) * (1 + 11)) = 24\nreach 24! expression: ((4 - 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(2) / (1) = 2, left: (2 / 1) = 2, 4, 11\nroll back, left: 1 2 4 11\n(1) - (2) = -1, left: (1 - 2) = -1, 4, 11\nroll back, left: 1 2 4 11\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, 4, 11\n(4) / (11) = 4/11, left: (4 / 11) = 4/11, (1 / 2) = 1/2\nroll back, left: (1 / 2) = 1/2, 4, 11\nroll back, left: 1 2 4 11\n(2) - (1) = 1, left: (2 - 1) = 1, 4, 11\nroll back, left: 1 2 4 11\n(4) / (1) = 4, left: (4 / 1) = 4, 2, 11\nroll back, left: 1 2 4 11\n(1) / (4) = 1/4, left: (1 / 4) = 1/4, 2, 11\n(2) - (1/4) = 7/4, left: (2 - (1 / 4)) = 7/4, 11\nroll back, left: (1 / 4) = 1/4, 2, 11\nroll back, left: 1 2 4 11\n(11) - (4) = 7, left: (11 - 4) = 7, 1, 2\n(1) * (2) = 2, left: (1 * 2) = 2, (11 - 4) = 7\nroll back, left: (11 - 4) = 7, 1, 2\nroll back, left: 1 2 4 11\n(11) / (4) = 11/4, left: (11 / 4) = 11/4, 1, 2\nroll back, left: 1 2 4 11\n(4) / (2) = 2, left: (4 / 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 / 2) = 2\n(2) * (12) = 24, left: ((4 / 2) * (1 + 11)) = 24\nreach 24! expression: ((4 / 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(2) / (11) = 2/11, left: (2 / 11) = 2/11, 1, 4\n(1) / (4) = 1/4, left: (1 / 4) = 1/4, (2 / 11) = 2/11\n(2/11) - (1/4) = -3/44, left: ((2 / 11) - (1 / 4)) = -3/44\nroll back, left: (1 / 4) = 1/4, (2 / 11) = 2/11\nroll back, left: (2 / 11) = 2/11, 1, 4\n(1) / (2/11) = 11/2, left: (1 / (2 / 11)) = 11/2, 4\nroll back, left: (2 / 11) = 2/11, 1, 4\nroll back, left: 1 2 4 11\n(11) - (2) = 9, left: (11 - 2) = 9, 1, 4\nroll back, left: 1 2 4 11\n(1) * (4) = 4, left: (1 * 4) = 4, 2, 11\n(11) / (4) = 11/4, left: (11 / (1 * 4)) = 11/4, 2\nroll back, left: (1 * 4) = 4, 2, 11\nroll back, left: 1 2 4 11\n(1) - (4) = -3, left: (1 - 4) = -3, 2, 11\nroll back, left: 1 2 4 11\n(4) - (1) = 3, left: (4 - 1) = 3, 2, 11\n(3) - (11) = -8, left: ((4 - 1) - 11) = -8, 2\nroll back, left: (4 - 1) = 3, 2, 11\n(2) - (3) = -1, left: (2 - (4 - 1)) = -1, 11\nroll back, left: (4 - 1) = 3, 2, 11\nroll back, left: 1 2 4 11\n(2) / (4) = 1/2, left: (2 / 4) = 1/2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (2 / 4) = 1/2\n(12) / (1/2) = 24, left: ((1 + 11) / (2 / 4)) = 24\nreach 24! expression: ((1 + 11) / (2 / 4))"}, {"input": "1 2 4 11\n", "output": "(11) / (2) = 11/2, left: (11 / 2) = 11/2, 1, 4\nroll back, left: 1 2 4 11\n(11) / (4) = 11/4, left: (11 / 4) = 11/4, 1, 2\n(2) / (11/4) = 8/11, left: (2 / (11 / 4)) = 8/11, 1\nroll back, left: (11 / 4) = 11/4, 1, 2\nroll back, left: 1 2 4 11\n(11) - (4) = 7, left: (11 - 4) = 7, 1, 2\n(2) / (1) = 2, left: (2 / 1) = 2, (11 - 4) = 7\nroll back, left: (11 - 4) = 7, 1, 2\nroll back, left: 1 2 4 11\n(4) / (11) = 4/11, left: (4 / 11) = 4/11, 1, 2\nroll back, left: 1 2 4 11\n(2) - (1) = 1, left: (2 - 1) = 1, 4, 11\n(11) / (1) = 11, left: (11 / (2 - 1)) = 11, 4\n(4) * (11) = 44, left: (4 * (11 / (2 - 1))) = 44\nroll back, left: (11 / (2 - 1)) = 11, 4\nroll back, left: (2 - 1) = 1, 4, 11\nroll back, left: 1 2 4 11\n(2) / (1) = 2, left: (2 / 1) = 2, 4, 11\n(11) + (2) = 13, left: (11 + (2 / 1)) = 13, 4\nroll back, left: (2 / 1) = 2, 4, 11\nroll back, left: 1 2 4 11\n(1) - (11) = -10, left: (1 - 11) = -10, 2, 4\n(2) * (-10) = -20, left: (2 * (1 - 11)) = -20, 4\n(4) - (-20) = 24, left: (4 - (2 * (1 - 11))) = 24\nreach 24! expression: (4 - (2 * (1 - 11)))"}, {"input": "1 2 4 11\n", "output": "(11) - (1) = 10, left: (11 - 1) = 10, 2, 4\n(4) * (10) = 40, left: (4 * (11 - 1)) = 40, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(4) / (10) = 2/5, left: (4 / (11 - 1)) = 2/5, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(4) - (2) = 2, left: (4 - 2) = 2, (11 - 1) = 10\n(10) / (2) = 5, left: ((11 - 1) / (4 - 2)) = 5\nroll back, left: (4 - 2) = 2, (11 - 1) = 10\nroll back, left: (11 - 1) = 10, 2, 4\n(2) + (4) = 6, left: (2 + 4) = 6, (11 - 1) = 10\nroll back, left: (11 - 1) = 10, 2, 4\n(2) - (4) = -2, left: (2 - 4) = -2, (11 - 1) = 10\nroll back, left: (11 - 1) = 10, 2, 4\n(2) / (4) = 1/2, left: (2 / 4) = 1/2, (11 - 1) = 10\nroll back, left: (11 - 1) = 10, 2, 4\n(2) / (10) = 1/5, left: (2 / (11 - 1)) = 1/5, 4\nroll back, left: (11 - 1) = 10, 2, 4\n(2) + (10) = 12, left: (2 + (11 - 1)) = 12, 4\n(12) - (4) = 8, left: ((2 + (11 - 1)) - 4) = 8\nroll back, left: (2 + (11 - 1)) = 12, 4\nroll back, left: (11 - 1) = 10, 2, 4\n(2) * (10) = 20, left: (2 * (11 - 1)) = 20, 4\n(20) - (4) = 16, left: ((2 * (11 - 1)) - 4) = 16\nroll back, left: (2 * (11 - 1)) = 20, 4\n(4) + (20) = 24, left: (4 + (2 * (11 - 1))) = 24\nreach 24! expression: (4 + (2 * (11 - 1)))"}, {"input": "1 2 4 11\n", "output": "(2) * (4) = 8, left: (2 * 4) = 8, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (2 * 4) = 8\nroll back, left: (2 * 4) = 8, 1, 11\n(1) * (8) = 8, left: (1 * (2 * 4)) = 8, 11\n(11) * (8) = 88, left: (11 * (1 * (2 * 4))) = 88\nroll back, left: (1 * (2 * 4)) = 8, 11\nroll back, left: (2 * 4) = 8, 1, 11\n(1) / (8) = 1/8, left: (1 / (2 * 4)) = 1/8, 11\nroll back, left: (2 * 4) = 8, 1, 11\n(8) - (1) = 7, left: ((2 * 4) - 1) = 7, 11\n(11) / (7) = 11/7, left: (11 / ((2 * 4) - 1)) = 11/7\nroll back, left: ((2 * 4) - 1) = 7, 11\nroll back, left: (2 * 4) = 8, 1, 11\n(8) / (1) = 8, left: ((2 * 4) / 1) = 8, 11\nroll back, left: (2 * 4) = 8, 1, 11\n(8) / (11) = 8/11, left: ((2 * 4) / 11) = 8/11, 1\nroll back, left: (2 * 4) = 8, 1, 11\nroll back, left: 1 2 4 11\n(4) - (2) = 2, left: (4 - 2) = 2, 1, 11\n(2) / (11) = 2/11, left: ((4 - 2) / 11) = 2/11, 1\nroll back, left: (4 - 2) = 2, 1, 11\n(11) / (1) = 11, left: (11 / 1) = 11, (4 - 2) = 2\nroll back, left: (4 - 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 - 2) = 2\n(2) * (12) = 24, left: ((4 - 2) * (1 + 11)) = 24\nreach 24! expression: ((4 - 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(11) / (2) = 11/2, left: (11 / 2) = 11/2, 1, 4\n(4) / (1) = 4, left: (4 / 1) = 4, (11 / 2) = 11/2\nroll back, left: (11 / 2) = 11/2, 1, 4\n(1) * (4) = 4, left: (1 * 4) = 4, (11 / 2) = 11/2\nroll back, left: (11 / 2) = 11/2, 1, 4\nroll back, left: 1 2 4 11\n(2) * (11) = 22, left: (2 * 11) = 22, 1, 4\n(4) * (22) = 88, left: (4 * (2 * 11)) = 88, 1\nroll back, left: (2 * 11) = 22, 1, 4\nroll back, left: 1 2 4 11\n(2) - (11) = -9, left: (2 - 11) = -9, 1, 4\n(4) * (-9) = -36, left: (4 * (2 - 11)) = -36, 1\nroll back, left: (2 - 11) = -9, 1, 4\nroll back, left: 1 2 4 11\n(1) * (4) = 4, left: (1 * 4) = 4, 2, 11\n(4) - (2) = 2, left: ((1 * 4) - 2) = 2, 11\nroll back, left: (1 * 4) = 4, 2, 11\nroll back, left: 1 2 4 11\n(1) + (4) = 5, left: (1 + 4) = 5, 2, 11\nroll back, left: 1 2 4 11\n(1) - (4) = -3, left: (1 - 4) = -3, 2, 11\nroll back, left: 1 2 4 11\n(4) - (1) = 3, left: (4 - 1) = 3, 2, 11\nroll back, left: 1 2 4 11\n(1) / (4) = 1/4, left: (1 / 4) = 1/4, 2, 11\n(2) - (1/4) = 7/4, left: (2 - (1 / 4)) = 7/4, 11\nroll back, left: (1 / 4) = 1/4, 2, 11\nroll back, left: 1 2 4 11\n(2) / (4) = 1/2, left: (2 / 4) = 1/2, 1, 11\n(1/2) - (1) = -1/2, left: ((2 / 4) - 1) = -1/2, 11\nroll back, left: (2 / 4) = 1/2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (2 / 4) = 1/2\n(12) / (1/2) = 24, left: ((1 + 11) / (2 / 4)) = 24\nreach 24! expression: ((1 + 11) / (2 / 4))"}, {"input": "1 2 4 11\n", "output": "(2) * (4) = 8, left: (2 * 4) = 8, 1, 11\n(1) / (11) = 1/11, left: (1 / 11) = 1/11, (2 * 4) = 8\nroll back, left: (2 * 4) = 8, 1, 11\n(1) - (11) = -10, left: (1 - 11) = -10, (2 * 4) = 8\n(8) / (-10) = -4/5, left: ((2 * 4) / (1 - 11)) = -4/5\nroll back, left: (1 - 11) = -10, (2 * 4) = 8\nroll back, left: (2 * 4) = 8, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (2 * 4) = 8\nroll back, left: (2 * 4) = 8, 1, 11\n(1) - (8) = -7, left: (1 - (2 * 4)) = -7, 11\n(11) / (-7) = -11/7, left: (11 / (1 - (2 * 4))) = -11/7\nroll back, left: (1 - (2 * 4)) = -7, 11\nroll back, left: (2 * 4) = 8, 1, 11\n(1) + (8) = 9, left: (1 + (2 * 4)) = 9, 11\n(9) - (11) = -2, left: ((1 + (2 * 4)) - 11) = -2\nroll back, left: (1 + (2 * 4)) = 9, 11\nroll back, left: (2 * 4) = 8, 1, 11\n(11) + (8) = 19, left: (11 + (2 * 4)) = 19, 1\n(1) / (19) = 1/19, left: (1 / (11 + (2 * 4))) = 1/19\nroll back, left: (11 + (2 * 4)) = 19, 1\nroll back, left: (2 * 4) = 8, 1, 11\nroll back, left: 1 2 4 11\n(4) - (2) = 2, left: (4 - 2) = 2, 1, 11\n(11) + (2) = 13, left: (11 + (4 - 2)) = 13, 1\nroll back, left: (4 - 2) = 2, 1, 11\n(2) - (11) = -9, left: ((4 - 2) - 11) = -9, 1\nroll back, left: (4 - 2) = 2, 1, 11\n(11) - (2) = 9, left: (11 - (4 - 2)) = 9, 1\nroll back, left: (4 - 2) = 2, 1, 11\n(11) - (1) = 10, left: (11 - 1) = 10, (4 - 2) = 2\nroll back, left: (4 - 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 - 2) = 2\n(2) * (12) = 24, left: ((4 - 2) * (1 + 11)) = 24\nreach 24! expression: ((4 - 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(1) - (2) = -1, left: (1 - 2) = -1, 4, 11\n(-1) - (11) = -12, left: ((1 - 2) - 11) = -12, 4\nroll back, left: (1 - 2) = -1, 4, 11\nroll back, left: 1 2 4 11\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, 4, 11\n(11) - (1/2) = 21/2, left: (11 - (1 / 2)) = 21/2, 4\nroll back, left: (1 / 2) = 1/2, 4, 11\nroll back, left: 1 2 4 11\n(2) - (1) = 1, left: (2 - 1) = 1, 4, 11\nroll back, left: 1 2 4 11\n(4) / (1) = 4, left: (4 / 1) = 4, 2, 11\n(11) / (2) = 11/2, left: (11 / 2) = 11/2, (4 / 1) = 4\nroll back, left: (4 / 1) = 4, 2, 11\nroll back, left: 1 2 4 11\n(1) - (4) = -3, left: (1 - 4) = -3, 2, 11\n(2) - (-3) = 5, left: (2 - (1 - 4)) = 5, 11\nroll back, left: (1 - 4) = -3, 2, 11\nroll back, left: 1 2 4 11\n(4) - (1) = 3, left: (4 - 1) = 3, 2, 11\nroll back, left: 1 2 4 11\n(4) + (11) = 15, left: (4 + 11) = 15, 1, 2\n(2) + (15) = 17, left: (2 + (4 + 11)) = 17, 1\nroll back, left: (4 + 11) = 15, 1, 2\nroll back, left: 1 2 4 11\n(11) - (4) = 7, left: (11 - 4) = 7, 1, 2\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, (11 - 4) = 7\nroll back, left: (11 - 4) = 7, 1, 2\nroll back, left: 1 2 4 11\n(4) / (11) = 4/11, left: (4 / 11) = 4/11, 1, 2\nroll back, left: 1 2 4 11\n(4) / (2) = 2, left: (4 / 2) = 2, 1, 11\n(1) + (11) = 12, left: (1 + 11) = 12, (4 / 2) = 2\n(2) * (12) = 24, left: ((4 / 2) * (1 + 11)) = 24\nreach 24! expression: ((4 / 2) * (1 + 11))"}, {"input": "1 2 4 11\n", "output": "(11) - (1) = 10, left: (11 - 1) = 10, 2, 4\n(4) / (10) = 2/5, left: (4 / (11 - 1)) = 2/5, 2\n(2) / (2/5) = 5, left: (2 / (4 / (11 - 1))) = 5\nroll back, left: (4 / (11 - 1)) = 2/5, 2\n(2) + (2/5) = 12/5, left: (2 + (4 / (11 - 1))) = 12/5\nroll back, left: (4 / (11 - 1)) = 2/5, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(4) + (10) = 14, left: (4 + (11 - 1)) = 14, 2\n(2) + (14) = 16, left: (2 + (4 + (11 - 1))) = 16\nroll back, left: (4 + (11 - 1)) = 14, 2\n(2) * (14) = 28, left: (2 * (4 + (11 - 1))) = 28\nroll back, left: (4 + (11 - 1)) = 14, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(10) / (4) = 5/2, left: ((11 - 1) / 4) = 5/2, 2\n(2) - (5/2) = -1/2, left: (2 - ((11 - 1) / 4)) = -1/2\nroll back, left: ((11 - 1) / 4) = 5/2, 2\nroll back, left: (11 - 1) = 10, 2, 4\n(2) * (4) = 8, left: (2 * 4) = 8, (11 - 1) = 10\nroll back, left: (11 - 1) = 10, 2, 4\n(4) - (2) = 2, left: (4 - 2) = 2, (11 - 1) = 10\n(10) / (2) = 5, left: ((11 - 1) / (4 - 2)) = 5\nroll back, left: (4 - 2) = 2, (11 - 1) = 10\n(10) * (2) = 20, left: ((11 - 1) * (4 - 2)) = 20\nroll back, left: (4 - 2) = 2, (11 - 1) = 10\nroll back, left: (11 - 1) = 10, 2, 4\n(4) / (2) = 2, left: (4 / 2) = 2, (11 - 1) = 10\nroll back, left: (11 - 1) = 10, 2, 4\n(2) / (10) = 1/5, left: (2 / (11 - 1)) = 1/5, 4\n(4) * (1/5) = 4/5, left: (4 * (2 / (11 - 1))) = 4/5\nroll back, left: (2 / (11 - 1)) = 1/5, 4\nroll back, left: (11 - 1) = 10, 2, 4\n(2) * (10) = 20, left: (2 * (11 - 1)) = 20, 4\n(4) + (20) = 24, left: (4 + (2 * (11 - 1))) = 24\nreach 24! expression: (4 + (2 * (11 - 1)))"}, {"input": "1 2 4 11\n", "output": "(2) * (11) = 22, left: (2 * 11) = 22, 1, 4\nroll back, left: 1 2 4 11\n(4) * (11) = 44, left: (4 * 11) = 44, 1, 2\n(44) / (2) = 22, left: ((4 * 11) / 2) = 22, 1\nroll back, left: (4 * 11) = 44, 1, 2\nroll back, left: 1 2 4 11\n(11) / (4) = 11/4, left: (11 / 4) = 11/4, 1, 2\nroll back, left: 1 2 4 11\n(11) - (4) = 7, left: (11 - 4) = 7, 1, 2\nroll back, left: 1 2 4 11\n(1) + (2) = 3, left: (1 + 2) = 3, 4, 11\n(4) + (11) = 15, left: (4 + 11) = 15, (1 + 2) = 3\nroll back, left: (1 + 2) = 3, 4, 11\nroll back, left: 1 2 4 11\n(2) - (1) = 1, left: (2 - 1) = 1, 4, 11\nroll back, left: 1 2 4 11\n(2) / (1) = 2, left: (2 / 1) = 2, 4, 11\n(2) / (4) = 1/2, left: ((2 / 1) / 4) = 1/2, 11\n(11) - (1/2) = 21/2, left: (11 - ((2 / 1) / 4)) = 21/2\nroll back, left: ((2 / 1) / 4) = 1/2, 11\nroll back, left: (2 / 1) = 2, 4, 11\nroll back, left: 1 2 4 11\n(1) - (2) = -1, left: (1 - 2) = -1, 4, 11\nroll back, left: 1 2 4 11\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, 4, 11\nroll back, left: 1 2 4 11\n(1) / (11) = 1/11, left: (1 / 11) = 1/11, 2, 4\nroll back, left: 1 2 4 11\n(1) - (11) = -10, left: (1 - 11) = -10, 2, 4\n(4) - (-10) = 14, left: (4 - (1 - 11)) = 14, 2\nroll back, left: (1 - 11) = -10, 2, 4\n(2) * (-10) = -20, left: (2 * (1 - 11)) = -20, 4\n(4) - (-20) = 24, left: (4 - (2 * (1 - 11))) = 24\nreach 24! expression: (4 - (2 * (1 - 11)))"}, {"input": "1 13 2 2\n", "output": "(2) - (13) = -11, left: (2 - 13) = -11, 1, 2\n(1) - (-11) = 12, left: (1 - (2 - 13)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 - (2 - 13))) = 24\nreach 24! expression: (2 * (1 - (2 - 13)))"}, {"input": "1 13 2 2\n", "output": "(1) * (13) = 13, left: (1 * 13) = 13, 2, 2\n(2) * (13) = 26, left: (2 * (1 * 13)) = 26, 2\n(26) - (2) = 24, left: ((2 * (1 * 13)) - 2) = 24\nreach 24! expression: ((2 * (1 * 13)) - 2)"}, {"input": "1 13 2 2\n", "output": "(1) * (2) = 2, left: (1 * 2) = 2, 13, 2\n(13) * (2) = 26, left: (13 * 2) = 26, (1 * 2) = 2\n(26) - (2) = 24, left: ((13 * 2) - (1 * 2)) = 24\nreach 24! expression: ((13 * 2) - (1 * 2))"}, {"input": "1 13 2 2\n", "output": "(13) * (2) = 26, left: (13 * 2) = 26, 1, 2\n(26) / (1) = 26, left: ((13 * 2) / 1) = 26, 2\n(26) - (2) = 24, left: (((13 * 2) / 1) - 2) = 24\nreach 24! expression: (((13 * 2) / 1) - 2)"}, {"input": "1 13 2 2\n", "output": "(13) - (2) = 11, left: (13 - 2) = 11, 1, 2\n(1) + (11) = 12, left: (1 + (13 - 2)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 + (13 - 2))) = 24\nreach 24! expression: (2 * (1 + (13 - 2)))"}, {"input": "1 13 2 2\n", "output": "(1) - (13) = -12, left: (1 - 13) = -12, 2, 2\n(2) / (2) = 1, left: (2 / 2) = 1, (1 - 13) = -12\nroll back, left: (1 - 13) = -12, 2, 2\nroll back, left: 1 13 2 2\n(1) * (13) = 13, left: (1 * 13) = 13, 2, 2\n(2) * (2) = 4, left: (2 * 2) = 4, (1 * 13) = 13\nroll back, left: (1 * 13) = 13, 2, 2\n(2) * (13) = 26, left: (2 * (1 * 13)) = 26, 2\n(26) - (2) = 24, left: ((2 * (1 * 13)) - 2) = 24\nreach 24! expression: ((2 * (1 * 13)) - 2)"}, {"input": "1 13 2 2\n", "output": "(1) * (2) = 2, left: (1 * 2) = 2, 13, 2\n(2) + (2) = 4, left: (2 + (1 * 2)) = 4, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) / (2) = 1, left: (2 / (1 * 2)) = 1, 13\n(13) + (1) = 14, left: (13 + (2 / (1 * 2))) = 14\nroll back, left: (2 / (1 * 2)) = 1, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(13) * (2) = 26, left: (13 * 2) = 26, (1 * 2) = 2\n(26) - (2) = 24, left: ((13 * 2) - (1 * 2)) = 24\nreach 24! expression: ((13 * 2) - (1 * 2))"}, {"input": "1 13 2 2\n", "output": "(13) - (2) = 11, left: (13 - 2) = 11, 1, 2\n(1) + (11) = 12, left: (1 + (13 - 2)) = 12, 2\n(12) / (2) = 6, left: ((1 + (13 - 2)) / 2) = 6\nroll back, left: (1 + (13 - 2)) = 12, 2\n(12) - (2) = 10, left: ((1 + (13 - 2)) - 2) = 10\nroll back, left: (1 + (13 - 2)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 + (13 - 2))) = 24\nreach 24! expression: (2 * (1 + (13 - 2)))"}, {"input": "1 13 2 2\n", "output": "(13) + (2) = 15, left: (13 + 2) = 15, 1, 2\nroll back, left: 1 13 2 2\n(2) / (13) = 2/13, left: (2 / 13) = 2/13, 1, 2\n(1) + (2/13) = 15/13, left: (1 + (2 / 13)) = 15/13, 2\nroll back, left: (2 / 13) = 2/13, 1, 2\nroll back, left: 1 13 2 2\n(2) - (13) = -11, left: (2 - 13) = -11, 1, 2\n(1) - (-11) = 12, left: (1 - (2 - 13)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 - (2 - 13))) = 24\nreach 24! expression: (2 * (1 - (2 - 13)))"}, {"input": "1 13 2 2\n", "output": "(13) + (2) = 15, left: (13 + 2) = 15, 1, 2\n(2) / (1) = 2, left: (2 / 1) = 2, (13 + 2) = 15\nroll back, left: (13 + 2) = 15, 1, 2\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, (13 + 2) = 15\nroll back, left: (13 + 2) = 15, 1, 2\nroll back, left: 1 13 2 2\n(13) * (2) = 26, left: (13 * 2) = 26, 1, 2\n(26) / (1) = 26, left: ((13 * 2) / 1) = 26, 2\n(26) - (2) = 24, left: (((13 * 2) / 1) - 2) = 24\nreach 24! expression: (((13 * 2) / 1) - 2)"}, {"input": "1 13 2 2\n", "output": "(13) + (2) = 15, left: (13 + 2) = 15, 1, 2\n(2) * (15) = 30, left: (2 * (13 + 2)) = 30, 1\nroll back, left: (13 + 2) = 15, 1, 2\nroll back, left: 1 13 2 2\n(13) / (2) = 13/2, left: (13 / 2) = 13/2, 1, 2\n(13/2) - (2) = 9/2, left: ((13 / 2) - 2) = 9/2, 1\nroll back, left: (13 / 2) = 13/2, 1, 2\n(1) * (13/2) = 13/2, left: (1 * (13 / 2)) = 13/2, 2\nroll back, left: (13 / 2) = 13/2, 1, 2\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, (13 / 2) = 13/2\nroll back, left: (13 / 2) = 13/2, 1, 2\nroll back, left: 1 13 2 2\n(13) * (2) = 26, left: (13 * 2) = 26, 1, 2\n(26) - (1) = 25, left: ((13 * 2) - 1) = 25, 2\nroll back, left: (13 * 2) = 26, 1, 2\n(26) / (1) = 26, left: ((13 * 2) / 1) = 26, 2\n(26) - (2) = 24, left: (((13 * 2) / 1) - 2) = 24\nreach 24! expression: (((13 * 2) / 1) - 2)"}, {"input": "1 13 2 2\n", "output": "(1) - (13) = -12, left: (1 - 13) = -12, 2, 2\n(2) / (2) = 1, left: (2 / 2) = 1, (1 - 13) = -12\nroll back, left: (1 - 13) = -12, 2, 2\n(2) * (2) = 4, left: (2 * 2) = 4, (1 - 13) = -12\nroll back, left: (1 - 13) = -12, 2, 2\n(2) + (-12) = -10, left: (2 + (1 - 13)) = -10, 2\nroll back, left: (1 - 13) = -12, 2, 2\n(2) * (-12) = -24, left: (2 * (1 - 13)) = -24, 2\n(2) * (-24) = -48, left: (2 * (2 * (1 - 13))) = -48\nroll back, left: (2 * (1 - 13)) = -24, 2\nroll back, left: (1 - 13) = -12, 2, 2\nroll back, left: 1 13 2 2\n(1) * (13) = 13, left: (1 * 13) = 13, 2, 2\n(13) - (2) = 11, left: ((1 * 13) - 2) = 11, 2\nroll back, left: (1 * 13) = 13, 2, 2\n(2) * (13) = 26, left: (2 * (1 * 13)) = 26, 2\n(26) - (2) = 24, left: ((2 * (1 * 13)) - 2) = 24\nreach 24! expression: ((2 * (1 * 13)) - 2)"}, {"input": "1 13 2 2\n", "output": "(13) - (2) = 11, left: (13 - 2) = 11, 1, 2\n(1) + (11) = 12, left: (1 + (13 - 2)) = 12, 2\n(12) / (2) = 6, left: ((1 + (13 - 2)) / 2) = 6\nroll back, left: (1 + (13 - 2)) = 12, 2\n(12) - (2) = 10, left: ((1 + (13 - 2)) - 2) = 10\nroll back, left: (1 + (13 - 2)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 + (13 - 2))) = 24\nreach 24! expression: (2 * (1 + (13 - 2)))"}, {"input": "1 13 2 2\n", "output": "(1) * (2) = 2, left: (1 * 2) = 2, 13, 2\n(2) / (2) = 1, left: ((1 * 2) / 2) = 1, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) + (2) = 4, left: (2 + (1 * 2)) = 4, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) / (2) = 1, left: (2 / (1 * 2)) = 1, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) - (2) = 0, left: ((1 * 2) - 2) = 0, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) * (2) = 4, left: (2 * (1 * 2)) = 4, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) - (2) = 0, left: (2 - (1 * 2)) = 0, 13\n(13) + (0) = 13, left: (13 + (2 - (1 * 2))) = 13\nroll back, left: (2 - (1 * 2)) = 0, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(13) * (2) = 26, left: (13 * 2) = 26, (1 * 2) = 2\n(26) - (2) = 24, left: ((13 * 2) - (1 * 2)) = 24\nreach 24! expression: ((13 * 2) - (1 * 2))"}, {"input": "1 13 2 2\n", "output": "(13) + (2) = 15, left: (13 + 2) = 15, 1, 2\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, (13 + 2) = 15\nroll back, left: (13 + 2) = 15, 1, 2\n(1) / (15) = 1/15, left: (1 / (13 + 2)) = 1/15, 2\nroll back, left: (13 + 2) = 15, 1, 2\nroll back, left: 1 13 2 2\n(2) / (13) = 2/13, left: (2 / 13) = 2/13, 1, 2\n(2) - (1) = 1, left: (2 - 1) = 1, (2 / 13) = 2/13\n(2/13) + (1) = 15/13, left: ((2 / 13) + (2 - 1)) = 15/13\nroll back, left: (2 - 1) = 1, (2 / 13) = 2/13\nroll back, left: (2 / 13) = 2/13, 1, 2\n(1) - (2/13) = 11/13, left: (1 - (2 / 13)) = 11/13, 2\nroll back, left: (2 / 13) = 2/13, 1, 2\nroll back, left: 1 13 2 2\n(2) - (13) = -11, left: (2 - 13) = -11, 1, 2\n(1) - (-11) = 12, left: (1 - (2 - 13)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 - (2 - 13))) = 24\nreach 24! expression: (2 * (1 - (2 - 13)))"}, {"input": "1 13 2 2\n", "output": "(1) * (2) = 2, left: (1 * 2) = 2, 13, 2\n(2) / (2) = 1, left: ((1 * 2) / 2) = 1, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) + (2) = 4, left: (2 + (1 * 2)) = 4, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) * (2) = 4, left: (2 * (1 * 2)) = 4, 13\n(13) * (4) = 52, left: (13 * (2 * (1 * 2))) = 52\nroll back, left: (2 * (1 * 2)) = 4, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) - (2) = 0, left: (2 - (1 * 2)) = 0, 13\n(0) / (13) = 0, left: ((2 - (1 * 2)) / 13) = 0\nroll back, left: (2 - (1 * 2)) = 0, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(13) - (2) = 11, left: (13 - 2) = 11, (1 * 2) = 2\nroll back, left: (1 * 2) = 2, 13, 2\n(2) - (13) = -11, left: (2 - 13) = -11, (1 * 2) = 2\nroll back, left: (1 * 2) = 2, 13, 2\n(2) / (13) = 2/13, left: (2 / 13) = 2/13, (1 * 2) = 2\n(2) / (2/13) = 13, left: ((1 * 2) / (2 / 13)) = 13\nroll back, left: (2 / 13) = 2/13, (1 * 2) = 2\n(2/13) - (2) = -24/13, left: ((2 / 13) - (1 * 2)) = -24/13\nroll back, left: (2 / 13) = 2/13, (1 * 2) = 2\nroll back, left: (1 * 2) = 2, 13, 2\n(13) * (2) = 26, left: (13 * 2) = 26, (1 * 2) = 2\n(26) - (2) = 24, left: ((13 * 2) - (1 * 2)) = 24\nreach 24! expression: ((13 * 2) - (1 * 2))"}, {"input": "1 13 2 2\n", "output": "(13) + (2) = 15, left: (13 + 2) = 15, 1, 2\n(1) * (2) = 2, left: (1 * 2) = 2, (13 + 2) = 15\nroll back, left: (13 + 2) = 15, 1, 2\n(1) - (2) = -1, left: (1 - 2) = -1, (13 + 2) = 15\nroll back, left: (13 + 2) = 15, 1, 2\n(1) - (15) = -14, left: (1 - (13 + 2)) = -14, 2\n(2) / (-14) = -1/7, left: (2 / (1 - (13 + 2))) = -1/7\nroll back, left: (1 - (13 + 2)) = -14, 2\nroll back, left: (13 + 2) = 15, 1, 2\nroll back, left: 1 13 2 2\n(13) / (2) = 13/2, left: (13 / 2) = 13/2, 1, 2\n(2) - (13/2) = -9/2, left: (2 - (13 / 2)) = -9/2, 1\n(-9/2) / (1) = -9/2, left: ((2 - (13 / 2)) / 1) = -9/2\nroll back, left: (2 - (13 / 2)) = -9/2, 1\nroll back, left: (13 / 2) = 13/2, 1, 2\n(1) * (2) = 2, left: (1 * 2) = 2, (13 / 2) = 13/2\nroll back, left: (13 / 2) = 13/2, 1, 2\n(1) - (2) = -1, left: (1 - 2) = -1, (13 / 2) = 13/2\nroll back, left: (13 / 2) = 13/2, 1, 2\nroll back, left: 1 13 2 2\n(13) * (2) = 26, left: (13 * 2) = 26, 1, 2\n(26) - (1) = 25, left: ((13 * 2) - 1) = 25, 2\nroll back, left: (13 * 2) = 26, 1, 2\n(26) / (1) = 26, left: ((13 * 2) / 1) = 26, 2\n(26) - (2) = 24, left: (((13 * 2) / 1) - 2) = 24\nreach 24! expression: (((13 * 2) / 1) - 2)"}, {"input": "1 13 2 2\n", "output": "(13) + (2) = 15, left: (13 + 2) = 15, 1, 2\n(2) / (1) = 2, left: (2 / 1) = 2, (13 + 2) = 15\nroll back, left: (13 + 2) = 15, 1, 2\n(2) - (1) = 1, left: (2 - 1) = 1, (13 + 2) = 15\nroll back, left: (13 + 2) = 15, 1, 2\n(1) - (15) = -14, left: (1 - (13 + 2)) = -14, 2\nroll back, left: (13 + 2) = 15, 1, 2\n(2) * (15) = 30, left: (2 * (13 + 2)) = 30, 1\nroll back, left: (13 + 2) = 15, 1, 2\n(15) / (2) = 15/2, left: ((13 + 2) / 2) = 15/2, 1\nroll back, left: (13 + 2) = 15, 1, 2\nroll back, left: 1 13 2 2\n(2) / (13) = 2/13, left: (2 / 13) = 2/13, 1, 2\n(1) - (2) = -1, left: (1 - 2) = -1, (2 / 13) = 2/13\nroll back, left: (2 / 13) = 2/13, 1, 2\n(2) - (2/13) = 24/13, left: (2 - (2 / 13)) = 24/13, 1\nroll back, left: (2 / 13) = 2/13, 1, 2\nroll back, left: 1 13 2 2\n(2) - (13) = -11, left: (2 - 13) = -11, 1, 2\n(2) - (-11) = 13, left: (2 - (2 - 13)) = 13, 1\nroll back, left: (2 - 13) = -11, 1, 2\n(2) - (1) = 1, left: (2 - 1) = 1, (2 - 13) = -11\nroll back, left: (2 - 13) = -11, 1, 2\n(1) - (-11) = 12, left: (1 - (2 - 13)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 - (2 - 13))) = 24\nreach 24! expression: (2 * (1 - (2 - 13)))"}, {"input": "1 13 2 2\n", "output": "(13) - (2) = 11, left: (13 - 2) = 11, 1, 2\n(1) + (11) = 12, left: (1 + (13 - 2)) = 12, 2\n(12) / (2) = 6, left: ((1 + (13 - 2)) / 2) = 6\nroll back, left: (1 + (13 - 2)) = 12, 2\n(12) - (2) = 10, left: ((1 + (13 - 2)) - 2) = 10\nroll back, left: (1 + (13 - 2)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 + (13 - 2))) = 24\nreach 24! expression: (2 * (1 + (13 - 2)))"}, {"input": "1 13 2 2\n", "output": "(1) - (13) = -12, left: (1 - 13) = -12, 2, 2\n(2) / (2) = 1, left: (2 / 2) = 1, (1 - 13) = -12\nroll back, left: (1 - 13) = -12, 2, 2\n(2) * (2) = 4, left: (2 * 2) = 4, (1 - 13) = -12\nroll back, left: (1 - 13) = -12, 2, 2\n(2) - (-12) = 14, left: (2 - (1 - 13)) = 14, 2\nroll back, left: (1 - 13) = -12, 2, 2\n(-12) / (2) = -6, left: ((1 - 13) / 2) = -6, 2\nroll back, left: (1 - 13) = -12, 2, 2\n(-12) / (2) = -6, left: ((1 - 13) / 2) = -6, 2\nroll back, left: (1 - 13) = -12, 2, 2\n(2) * (-12) = -24, left: (2 * (1 - 13)) = -24, 2\nroll back, left: (1 - 13) = -12, 2, 2\n(-12) - (2) = -14, left: ((1 - 13) - 2) = -14, 2\nroll back, left: (1 - 13) = -12, 2, 2\n(2) / (-12) = -1/6, left: (2 / (1 - 13)) = -1/6, 2\nroll back, left: (1 - 13) = -12, 2, 2\nroll back, left: 1 13 2 2\n(1) * (13) = 13, left: (1 * 13) = 13, 2, 2\n(2) - (2) = 0, left: (2 - 2) = 0, (1 * 13) = 13\nroll back, left: (1 * 13) = 13, 2, 2\n(13) - (2) = 11, left: ((1 * 13) - 2) = 11, 2\nroll back, left: (1 * 13) = 13, 2, 2\n(2) * (13) = 26, left: (2 * (1 * 13)) = 26, 2\n(26) - (2) = 24, left: ((2 * (1 * 13)) - 2) = 24\nreach 24! expression: ((2 * (1 * 13)) - 2)"}, {"input": "1 13 2 2\n", "output": "(1) - (13) = -12, left: (1 - 13) = -12, 2, 2\n(2) + (2) = 4, left: (2 + 2) = 4, (1 - 13) = -12\nroll back, left: (1 - 13) = -12, 2, 2\n(2) / (2) = 1, left: (2 / 2) = 1, (1 - 13) = -12\n(1) / (-12) = -1/12, left: ((2 / 2) / (1 - 13)) = -1/12\nroll back, left: (2 / 2) = 1, (1 - 13) = -12\nroll back, left: (1 - 13) = -12, 2, 2\n(-12) / (2) = -6, left: ((1 - 13) / 2) = -6, 2\n(-6) - (2) = -8, left: (((1 - 13) / 2) - 2) = -8\nroll back, left: ((1 - 13) / 2) = -6, 2\nroll back, left: (1 - 13) = -12, 2, 2\n(-12) - (2) = -14, left: ((1 - 13) - 2) = -14, 2\n(2) * (-14) = -28, left: (2 * ((1 - 13) - 2)) = -28\nroll back, left: ((1 - 13) - 2) = -14, 2\nroll back, left: (1 - 13) = -12, 2, 2\n(2) + (-12) = -10, left: (2 + (1 - 13)) = -10, 2\n(-10) - (2) = -12, left: ((2 + (1 - 13)) - 2) = -12\nroll back, left: (2 + (1 - 13)) = -10, 2\nroll back, left: (1 - 13) = -12, 2, 2\nroll back, left: 1 13 2 2\n(1) * (13) = 13, left: (1 * 13) = 13, 2, 2\n(2) / (2) = 1, left: (2 / 2) = 1, (1 * 13) = 13\nroll back, left: (1 * 13) = 13, 2, 2\n(2) - (2) = 0, left: (2 - 2) = 0, (1 * 13) = 13\nroll back, left: (1 * 13) = 13, 2, 2\n(2) / (2) = 1, left: (2 / 2) = 1, (1 * 13) = 13\nroll back, left: (1 * 13) = 13, 2, 2\n(2) - (2) = 0, left: (2 - 2) = 0, (1 * 13) = 13\nroll back, left: (1 * 13) = 13, 2, 2\n(2) * (13) = 26, left: (2 * (1 * 13)) = 26, 2\n(2) * (26) = 52, left: (2 * (2 * (1 * 13))) = 52\nroll back, left: (2 * (1 * 13)) = 26, 2\n(26) - (2) = 24, left: ((2 * (1 * 13)) - 2) = 24\nreach 24! expression: ((2 * (1 * 13)) - 2)"}, {"input": "1 13 2 2\n", "output": "(13) + (2) = 15, left: (13 + 2) = 15, 1, 2\n(2) / (1) = 2, left: (2 / 1) = 2, (13 + 2) = 15\nroll back, left: (13 + 2) = 15, 1, 2\n(2) - (1) = 1, left: (2 - 1) = 1, (13 + 2) = 15\n(15) * (1) = 15, left: ((13 + 2) * (2 - 1)) = 15\nroll back, left: (2 - 1) = 1, (13 + 2) = 15\nroll back, left: (13 + 2) = 15, 1, 2\n(2) + (15) = 17, left: (2 + (13 + 2)) = 17, 1\nroll back, left: (13 + 2) = 15, 1, 2\n(15) - (2) = 13, left: ((13 + 2) - 2) = 13, 1\nroll back, left: (13 + 2) = 15, 1, 2\n(1) / (15) = 1/15, left: (1 / (13 + 2)) = 1/15, 2\n(1/15) - (2) = -29/15, left: ((1 / (13 + 2)) - 2) = -29/15\nroll back, left: (1 / (13 + 2)) = 1/15, 2\nroll back, left: (13 + 2) = 15, 1, 2\nroll back, left: 1 13 2 2\n(13) / (2) = 13/2, left: (13 / 2) = 13/2, 1, 2\n(13/2) / (2) = 13/4, left: ((13 / 2) / 2) = 13/4, 1\nroll back, left: (13 / 2) = 13/2, 1, 2\n(2) / (13/2) = 4/13, left: (2 / (13 / 2)) = 4/13, 1\n(4/13) / (1) = 4/13, left: ((2 / (13 / 2)) / 1) = 4/13\nroll back, left: (2 / (13 / 2)) = 4/13, 1\nroll back, left: (13 / 2) = 13/2, 1, 2\n(13/2) / (1) = 13/2, left: ((13 / 2) / 1) = 13/2, 2\nroll back, left: (13 / 2) = 13/2, 1, 2\n(1) - (2) = -1, left: (1 - 2) = -1, (13 / 2) = 13/2\nroll back, left: (13 / 2) = 13/2, 1, 2\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, (13 / 2) = 13/2\nroll back, left: (13 / 2) = 13/2, 1, 2\nroll back, left: 1 13 2 2\n(13) * (2) = 26, left: (13 * 2) = 26, 1, 2\n(26) / (1) = 26, left: ((13 * 2) / 1) = 26, 2\n(26) - (2) = 24, left: (((13 * 2) / 1) - 2) = 24\nreach 24! expression: (((13 * 2) / 1) - 2)"}, {"input": "1 13 2 2\n", "output": "(13) + (2) = 15, left: (13 + 2) = 15, 1, 2\n(15) / (1) = 15, left: ((13 + 2) / 1) = 15, 2\nroll back, left: (13 + 2) = 15, 1, 2\n(1) + (15) = 16, left: (1 + (13 + 2)) = 16, 2\n(16) - (2) = 14, left: ((1 + (13 + 2)) - 2) = 14\nroll back, left: (1 + (13 + 2)) = 16, 2\nroll back, left: (13 + 2) = 15, 1, 2\n(2) * (15) = 30, left: (2 * (13 + 2)) = 30, 1\nroll back, left: (13 + 2) = 15, 1, 2\n(2) / (15) = 2/15, left: (2 / (13 + 2)) = 2/15, 1\nroll back, left: (13 + 2) = 15, 1, 2\nroll back, left: 1 13 2 2\n(2) / (13) = 2/13, left: (2 / 13) = 2/13, 1, 2\n(2) - (1) = 1, left: (2 - 1) = 1, (2 / 13) = 2/13\nroll back, left: (2 / 13) = 2/13, 1, 2\n(1) / (2) = 1/2, left: (1 / 2) = 1/2, (2 / 13) = 2/13\nroll back, left: (2 / 13) = 2/13, 1, 2\n(2/13) - (1) = -11/13, left: ((2 / 13) - 1) = -11/13, 2\n(2) * (-11/13) = -22/13, left: (2 * ((2 / 13) - 1)) = -22/13\nroll back, left: ((2 / 13) - 1) = -11/13, 2\nroll back, left: (2 / 13) = 2/13, 1, 2\nroll back, left: 1 13 2 2\n(2) - (13) = -11, left: (2 - 13) = -11, 1, 2\n(2) - (-11) = 13, left: (2 - (2 - 13)) = 13, 1\nroll back, left: (2 - 13) = -11, 1, 2\n(2) + (-11) = -9, left: (2 + (2 - 13)) = -9, 1\nroll back, left: (2 - 13) = -11, 1, 2\n(-11) / (1) = -11, left: ((2 - 13) / 1) = -11, 2\nroll back, left: (2 - 13) = -11, 1, 2\n(-11) - (1) = -12, left: ((2 - 13) - 1) = -12, 2\nroll back, left: (2 - 13) = -11, 1, 2\n(1) - (-11) = 12, left: (1 - (2 - 13)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 - (2 - 13))) = 24\nreach 24! expression: (2 * (1 - (2 - 13)))"}, {"input": "1 13 2 2\n", "output": "(13) - (2) = 11, left: (13 - 2) = 11, 1, 2\n(1) + (11) = 12, left: (1 + (13 - 2)) = 12, 2\n(12) / (2) = 6, left: ((1 + (13 - 2)) / 2) = 6\nroll back, left: (1 + (13 - 2)) = 12, 2\n(12) - (2) = 10, left: ((1 + (13 - 2)) - 2) = 10\nroll back, left: (1 + (13 - 2)) = 12, 2\n(2) * (12) = 24, left: (2 * (1 + (13 - 2))) = 24\nreach 24! expression: (2 * (1 + (13 - 2)))"}, {"input": "1 13 2 2\n", "output": "(1) * (2) = 2, left: (1 * 2) = 2, 13, 2\n(2) / (2) = 1, left: ((1 * 2) / 2) = 1, 13\n(13) * (1) = 13, left: (13 * ((1 * 2) / 2)) = 13\nroll back, left: ((1 * 2) / 2) = 1, 13\n(1) - (13) = -12, left: (((1 * 2) / 2) - 13) = -12\nroll back, left: ((1 * 2) / 2) = 1, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) + (2) = 4, left: (2 + (1 * 2)) = 4, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) / (2) = 1, left: (2 / (1 * 2)) = 1, 13\n(13) / (1) = 13, left: (13 / (2 / (1 * 2))) = 13\nroll back, left: (2 / (1 * 2)) = 1, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(2) - (2) = 0, left: ((1 * 2) - 2) = 0, 13\n(13) * (0) = 0, left: (13 * ((1 * 2) - 2)) = 0\nroll back, left: ((1 * 2) - 2) = 0, 13\nroll back, left: (1 * 2) = 2, 13, 2\n(13) - (2) = 11, left: (13 - 2) = 11, (1 * 2) = 2\nroll back, left: (1 * 2) = 2, 13, 2\n(13) / (2) = 13/2, left: (13 / 2) = 13/2, (1 * 2) = 2\n(13/2) / (2) = 13/4, left: ((13 / 2) / (1 * 2)) = 13/4\nroll back, left: (13 / 2) = 13/2, (1 * 2) = 2\nroll back, left: (1 * 2) = 2, 13, 2\n(13) + (2) = 15, left: (13 + 2) = 15, (1 * 2) = 2\n(15) - (2) = 13, left: ((13 + 2) - (1 * 2)) = 13\nroll back, left: (13 + 2) = 15, (1 * 2) = 2\nroll back, left: (1 * 2) = 2, 13, 2\n(2) - (13) = -11, left: (2 - 13) = -11, (1 * 2) = 2\nroll back, left: (1 * 2) = 2, 13, 2\n(2) / (13) = 2/13, left: (2 / 13) = 2/13, (1 * 2) = 2\nroll back, left: (1 * 2) = 2, 13, 2\n(13) * (2) = 26, left: (13 * 2) = 26, (1 * 2) = 2\n(26) - (2) = 24, left: ((13 * 2) - (1 * 2)) = 24\nreach 24! expression: ((13 * 2) - (1 * 2))"}, {"input": "2 11 9 7\n", "output": "(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(9) - (7) = 2, left: (9 - 7) = 2, (2 * 11) = 22\n(22) + (2) = 24, left: ((2 * 11) + (9 - 7)) = 24\nreach 24! expression: ((2 * 11) + (9 - 7))"}, {"input": "2 11 9 7\n", "output": "(9) - (7) = 2, left: (9 - 7) = 2, 2, 11\n(11) * (2) = 22, left: (11 * (9 - 7)) = 22, 2\n(2) + (22) = 24, left: (2 + (11 * (9 - 7))) = 24\nreach 24! expression: (2 + (11 * (9 - 7)))"}, {"input": "2 11 9 7\n", "output": "(7) - (9) = -2, left: (7 - 9) = -2, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (7 - 9) = -2\n(22) - (-2) = 24, left: ((2 * 11) - (7 - 9)) = 24\nreach 24! expression: ((2 * 11) - (7 - 9))"}, {"input": "2 11 9 7\n", "output": "(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(22) - (7) = 15, left: ((2 * 11) - 7) = 15, 9\n(9) + (15) = 24, left: (9 + ((2 * 11) - 7)) = 24\nreach 24! expression: (9 + ((2 * 11) - 7))"}, {"input": "2 11 9 7\n", "output": "(7) - (11) = -4, left: (7 - 11) = -4, 2, 9\n(2) + (-4) = -2, left: (2 + (7 - 11)) = -2, 9\nroll back, left: (7 - 11) = -4, 2, 9\nroll back, left: 2 11 9 7\n(11) * (7) = 77, left: (11 * 7) = 77, 2, 9\nroll back, left: 2 11 9 7\n(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(9) - (7) = 2, left: (9 - 7) = 2, (2 * 11) = 22\n(22) + (2) = 24, left: ((2 * 11) + (9 - 7)) = 24\nreach 24! expression: ((2 * 11) + (9 - 7))"}, {"input": "2 11 9 7\n", "output": "(9) * (7) = 63, left: (9 * 7) = 63, 2, 11\n(11) / (63) = 11/63, left: (11 / (9 * 7)) = 11/63, 2\nroll back, left: (9 * 7) = 63, 2, 11\nroll back, left: 2 11 9 7\n(9) + (7) = 16, left: (9 + 7) = 16, 2, 11\nroll back, left: 2 11 9 7\n(7) - (9) = -2, left: (7 - 9) = -2, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (7 - 9) = -2\n(22) - (-2) = 24, left: ((2 * 11) - (7 - 9)) = 24\nreach 24! expression: ((2 * 11) - (7 - 9))"}, {"input": "2 11 9 7\n", "output": "(9) - (7) = 2, left: (9 - 7) = 2, 2, 11\n(2) - (11) = -9, left: ((9 - 7) - 11) = -9, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) + (2) = 13, left: (11 + (9 - 7)) = 13, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) - (2) = 9, left: (11 - (9 - 7)) = 9, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) * (2) = 22, left: (11 * (9 - 7)) = 22, 2\n(2) + (22) = 24, left: (2 + (11 * (9 - 7))) = 24\nreach 24! expression: (2 + (11 * (9 - 7)))"}, {"input": "2 11 9 7\n", "output": "(11) + (7) = 18, left: (11 + 7) = 18, 2, 9\nroll back, left: 2 11 9 7\n(2) * (9) = 18, left: (2 * 9) = 18, 11, 7\nroll back, left: 2 11 9 7\n(9) - (11) = -2, left: (9 - 11) = -2, 2, 7\nroll back, left: 2 11 9 7\n(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(22) - (7) = 15, left: ((2 * 11) - 7) = 15, 9\n(9) + (15) = 24, left: (9 + ((2 * 11) - 7)) = 24\nreach 24! expression: (9 + ((2 * 11) - 7))"}, {"input": "2 11 9 7\n", "output": "(11) + (9) = 20, left: (11 + 9) = 20, 2, 7\nroll back, left: 2 11 9 7\n(11) - (9) = 2, left: (11 - 9) = 2, 2, 7\nroll back, left: 2 11 9 7\n(11) / (7) = 11/7, left: (11 / 7) = 11/7, 2, 9\nroll back, left: 2 11 9 7\n(7) - (9) = -2, left: (7 - 9) = -2, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (7 - 9) = -2\n(22) - (-2) = 24, left: ((2 * 11) - (7 - 9)) = 24\nreach 24! expression: ((2 * 11) - (7 - 9))"}, {"input": "2 11 9 7\n", "output": "(9) - (7) = 2, left: (9 - 7) = 2, 2, 11\n(2) - (11) = -9, left: ((9 - 7) - 11) = -9, 2\n(2) * (-9) = -18, left: (2 * ((9 - 7) - 11)) = -18\nroll back, left: ((9 - 7) - 11) = -9, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) + (2) = 13, left: (11 + (9 - 7)) = 13, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(2) / (11) = 2/11, left: ((9 - 7) / 11) = 2/11, 2\n(2/11) / (2) = 1/11, left: (((9 - 7) / 11) / 2) = 1/11\nroll back, left: ((9 - 7) / 11) = 2/11, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) - (2) = 9, left: (11 - (9 - 7)) = 9, 2\n(2) - (9) = -7, left: (2 - (11 - (9 - 7))) = -7\nroll back, left: (11 - (9 - 7)) = 9, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) * (2) = 22, left: (11 * (9 - 7)) = 22, 2\n(2) + (22) = 24, left: (2 + (11 * (9 - 7))) = 24\nreach 24! expression: (2 + (11 * (9 - 7)))"}, {"input": "2 11 9 7\n", "output": "(7) / (11) = 7/11, left: (7 / 11) = 7/11, 2, 9\nroll back, left: 2 11 9 7\n(11) * (7) = 77, left: (11 * 7) = 77, 2, 9\nroll back, left: 2 11 9 7\n(9) / (2) = 9/2, left: (9 / 2) = 9/2, 11, 7\nroll back, left: 2 11 9 7\n(2) * (9) = 18, left: (2 * 9) = 18, 11, 7\nroll back, left: 2 11 9 7\n(11) / (9) = 11/9, left: (11 / 9) = 11/9, 2, 7\n(11/9) / (7) = 11/63, left: ((11 / 9) / 7) = 11/63, 2\nroll back, left: (11 / 9) = 11/9, 2, 7\nroll back, left: 2 11 9 7\n(11) - (2) = 9, left: (11 - 2) = 9, 9, 7\nroll back, left: 2 11 9 7\n(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(22) - (7) = 15, left: ((2 * 11) - 7) = 15, 9\n(9) + (15) = 24, left: (9 + ((2 * 11) - 7)) = 24\nreach 24! expression: (9 + ((2 * 11) - 7))"}, {"input": "2 11 9 7\n", "output": "(2) / (9) = 2/9, left: (2 / 9) = 2/9, 11, 7\n(7) / (11) = 7/11, left: (7 / 11) = 7/11, (2 / 9) = 2/9\nroll back, left: (2 / 9) = 2/9, 11, 7\nroll back, left: 2 11 9 7\n(9) - (11) = -2, left: (9 - 11) = -2, 2, 7\n(7) / (-2) = -7/2, left: (7 / (9 - 11)) = -7/2, 2\nroll back, left: (9 - 11) = -2, 2, 7\nroll back, left: 2 11 9 7\n(7) - (11) = -4, left: (7 - 11) = -4, 2, 9\nroll back, left: 2 11 9 7\n(11) + (7) = 18, left: (11 + 7) = 18, 2, 9\n(9) / (2) = 9/2, left: (9 / 2) = 9/2, (11 + 7) = 18\nroll back, left: (11 + 7) = 18, 2, 9\nroll back, left: 2 11 9 7\n(7) - (9) = -2, left: (7 - 9) = -2, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (7 - 9) = -2\n(22) - (-2) = 24, left: ((2 * 11) - (7 - 9)) = 24\nreach 24! expression: ((2 * 11) - (7 - 9))"}, {"input": "2 11 9 7\n", "output": "(2) * (7) = 14, left: (2 * 7) = 14, 11, 9\nroll back, left: 2 11 9 7\n(2) - (7) = -5, left: (2 - 7) = -5, 11, 9\nroll back, left: 2 11 9 7\n(9) - (11) = -2, left: (9 - 11) = -2, 2, 7\nroll back, left: 2 11 9 7\n(11) + (9) = 20, left: (11 + 9) = 20, 2, 7\n(2) * (20) = 40, left: (2 * (11 + 9)) = 40, 7\nroll back, left: (11 + 9) = 20, 2, 7\nroll back, left: 2 11 9 7\n(11) + (7) = 18, left: (11 + 7) = 18, 2, 9\nroll back, left: 2 11 9 7\n(7) - (11) = -4, left: (7 - 11) = -4, 2, 9\nroll back, left: 2 11 9 7\n(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(9) - (7) = 2, left: (9 - 7) = 2, (2 * 11) = 22\n(22) + (2) = 24, left: ((2 * 11) + (9 - 7)) = 24\nreach 24! expression: ((2 * 11) + (9 - 7))"}, {"input": "2 11 9 7\n", "output": "(9) * (7) = 63, left: (9 * 7) = 63, 2, 11\n(2) + (63) = 65, left: (2 + (9 * 7)) = 65, 11\nroll back, left: (9 * 7) = 63, 2, 11\n(63) / (2) = 63/2, left: ((9 * 7) / 2) = 63/2, 11\nroll back, left: (9 * 7) = 63, 2, 11\n(11) / (2) = 11/2, left: (11 / 2) = 11/2, (9 * 7) = 63\nroll back, left: (9 * 7) = 63, 2, 11\nroll back, left: 2 11 9 7\n(9) + (7) = 16, left: (9 + 7) = 16, 2, 11\n(11) / (16) = 11/16, left: (11 / (9 + 7)) = 11/16, 2\nroll back, left: (9 + 7) = 16, 2, 11\n(2) - (16) = -14, left: (2 - (9 + 7)) = -14, 11\nroll back, left: (9 + 7) = 16, 2, 11\nroll back, left: 2 11 9 7\n(7) - (9) = -2, left: (7 - 9) = -2, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (7 - 9) = -2\n(22) - (-2) = 24, left: ((2 * 11) - (7 - 9)) = 24\nreach 24! expression: ((2 * 11) - (7 - 9))"}, {"input": "2 11 9 7\n", "output": "(9) - (7) = 2, left: (9 - 7) = 2, 2, 11\n(2) - (11) = -9, left: ((9 - 7) - 11) = -9, 2\n(2) - (-9) = 11, left: (2 - ((9 - 7) - 11)) = 11\nroll back, left: ((9 - 7) - 11) = -9, 2\n(-9) / (2) = -9/2, left: (((9 - 7) - 11) / 2) = -9/2\nroll back, left: ((9 - 7) - 11) = -9, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) + (2) = 13, left: (11 + (9 - 7)) = 13, 2\n(13) - (2) = 11, left: ((11 + (9 - 7)) - 2) = 11\nroll back, left: (11 + (9 - 7)) = 13, 2\n(2) / (13) = 2/13, left: (2 / (11 + (9 - 7))) = 2/13\nroll back, left: (11 + (9 - 7)) = 13, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(2) / (11) = 2/11, left: ((9 - 7) / 11) = 2/11, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) - (2) = 9, left: (11 - (9 - 7)) = 9, 2\n(9) - (2) = 7, left: ((11 - (9 - 7)) - 2) = 7\nroll back, left: (11 - (9 - 7)) = 9, 2\n(2) + (9) = 11, left: (2 + (11 - (9 - 7))) = 11\nroll back, left: (11 - (9 - 7)) = 9, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) * (2) = 22, left: (11 * (9 - 7)) = 22, 2\n(22) - (2) = 20, left: ((11 * (9 - 7)) - 2) = 20\nroll back, left: (11 * (9 - 7)) = 22, 2\n(2) + (22) = 24, left: (2 + (11 * (9 - 7))) = 24\nreach 24! expression: (2 + (11 * (9 - 7)))"}, {"input": "2 11 9 7\n", "output": "(7) - (11) = -4, left: (7 - 11) = -4, 2, 9\n(2) + (9) = 11, left: (2 + 9) = 11, (7 - 11) = -4\n(-4) * (11) = -44, left: ((7 - 11) * (2 + 9)) = -44\nroll back, left: (2 + 9) = 11, (7 - 11) = -4\nroll back, left: (7 - 11) = -4, 2, 9\nroll back, left: 2 11 9 7\n(11) * (7) = 77, left: (11 * 7) = 77, 2, 9\n(2) - (77) = -75, left: (2 - (11 * 7)) = -75, 9\nroll back, left: (11 * 7) = 77, 2, 9\nroll back, left: 2 11 9 7\n(9) / (2) = 9/2, left: (9 / 2) = 9/2, 11, 7\n(11) * (7) = 77, left: (11 * 7) = 77, (9 / 2) = 9/2\n(9/2) * (77) = 693/2, left: ((9 / 2) * (11 * 7)) = 693/2\nroll back, left: (11 * 7) = 77, (9 / 2) = 9/2\nroll back, left: (9 / 2) = 9/2, 11, 7\nroll back, left: 2 11 9 7\n(2) * (9) = 18, left: (2 * 9) = 18, 11, 7\n(18) / (7) = 18/7, left: ((2 * 9) / 7) = 18/7, 11\nroll back, left: (2 * 9) = 18, 11, 7\nroll back, left: 2 11 9 7\n(11) / (9) = 11/9, left: (11 / 9) = 11/9, 2, 7\nroll back, left: 2 11 9 7\n(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(22) - (7) = 15, left: ((2 * 11) - 7) = 15, 9\n(9) + (15) = 24, left: (9 + ((2 * 11) - 7)) = 24\nreach 24! expression: (9 + ((2 * 11) - 7))"}, {"input": "2 11 9 7\n", "output": "(9) * (7) = 63, left: (9 * 7) = 63, 2, 11\n(2) - (11) = -9, left: (2 - 11) = -9, (9 * 7) = 63\nroll back, left: (9 * 7) = 63, 2, 11\nroll back, left: 2 11 9 7\n(9) + (7) = 16, left: (9 + 7) = 16, 2, 11\n(16) - (11) = 5, left: ((9 + 7) - 11) = 5, 2\nroll back, left: (9 + 7) = 16, 2, 11\n(16) / (11) = 16/11, left: ((9 + 7) / 11) = 16/11, 2\nroll back, left: (9 + 7) = 16, 2, 11\n(16) - (2) = 14, left: ((9 + 7) - 2) = 14, 11\nroll back, left: (9 + 7) = 16, 2, 11\n(2) - (16) = -14, left: (2 - (9 + 7)) = -14, 11\n(11) + (-14) = -3, left: (11 + (2 - (9 + 7))) = -3\nroll back, left: (2 - (9 + 7)) = -14, 11\n(11) * (-14) = -154, left: (11 * (2 - (9 + 7))) = -154\nroll back, left: (2 - (9 + 7)) = -14, 11\nroll back, left: (9 + 7) = 16, 2, 11\n(11) / (2) = 11/2, left: (11 / 2) = 11/2, (9 + 7) = 16\nroll back, left: (9 + 7) = 16, 2, 11\n(2) - (11) = -9, left: (2 - 11) = -9, (9 + 7) = 16\nroll back, left: (9 + 7) = 16, 2, 11\nroll back, left: 2 11 9 7\n(7) - (9) = -2, left: (7 - 9) = -2, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (7 - 9) = -2\n(22) - (-2) = 24, left: ((2 * 11) - (7 - 9)) = 24\nreach 24! expression: ((2 * 11) - (7 - 9))"}, {"input": "2 11 9 7\n", "output": "(2) - (9) = -7, left: (2 - 9) = -7, 11, 7\n(-7) / (7) = -1, left: ((2 - 9) / 7) = -1, 11\nroll back, left: (2 - 9) = -7, 11, 7\nroll back, left: 2 11 9 7\n(2) / (9) = 2/9, left: (2 / 9) = 2/9, 11, 7\nroll back, left: 2 11 9 7\n(11) + (9) = 20, left: (11 + 9) = 20, 2, 7\nroll back, left: 2 11 9 7\n(9) / (11) = 9/11, left: (9 / 11) = 9/11, 2, 7\n(2) + (9/11) = 31/11, left: (2 + (9 / 11)) = 31/11, 7\n(7) / (31/11) = 77/31, left: (7 / (2 + (9 / 11))) = 77/31\nroll back, left: (2 + (9 / 11)) = 31/11, 7\nroll back, left: (9 / 11) = 9/11, 2, 7\nroll back, left: 2 11 9 7\n(9) - (11) = -2, left: (9 - 11) = -2, 2, 7\nroll back, left: 2 11 9 7\n(7) - (11) = -4, left: (7 - 11) = -4, 2, 9\nroll back, left: 2 11 9 7\n(11) / (7) = 11/7, left: (11 / 7) = 11/7, 2, 9\n(2) * (9) = 18, left: (2 * 9) = 18, (11 / 7) = 11/7\nroll back, left: (11 / 7) = 11/7, 2, 9\nroll back, left: 2 11 9 7\n(7) - (9) = -2, left: (7 - 9) = -2, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (7 - 9) = -2\n(22) - (-2) = 24, left: ((2 * 11) - (7 - 9)) = 24\nreach 24! expression: ((2 * 11) - (7 - 9))"}, {"input": "2 11 9 7\n", "output": "(2) - (7) = -5, left: (2 - 7) = -5, 11, 9\nroll back, left: 2 11 9 7\n(7) / (2) = 7/2, left: (7 / 2) = 7/2, 11, 9\nroll back, left: 2 11 9 7\n(2) / (7) = 2/7, left: (2 / 7) = 2/7, 11, 9\n(9) + (2/7) = 65/7, left: (9 + (2 / 7)) = 65/7, 11\nroll back, left: (2 / 7) = 2/7, 11, 9\nroll back, left: 2 11 9 7\n(11) - (9) = 2, left: (11 - 9) = 2, 2, 7\nroll back, left: 2 11 9 7\n(11) / (9) = 11/9, left: (11 / 9) = 11/9, 2, 7\n(11/9) / (2) = 11/18, left: ((11 / 9) / 2) = 11/18, 7\nroll back, left: (11 / 9) = 11/9, 2, 7\nroll back, left: 2 11 9 7\n(9) - (11) = -2, left: (9 - 11) = -2, 2, 7\nroll back, left: 2 11 9 7\n(11) + (7) = 18, left: (11 + 7) = 18, 2, 9\n(18) - (2) = 16, left: ((11 + 7) - 2) = 16, 9\nroll back, left: (11 + 7) = 18, 2, 9\nroll back, left: 2 11 9 7\n(2) + (11) = 13, left: (2 + 11) = 13, 9, 7\nroll back, left: 2 11 9 7\n(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(9) - (7) = 2, left: (9 - 7) = 2, (2 * 11) = 22\n(22) + (2) = 24, left: ((2 * 11) + (9 - 7)) = 24\nreach 24! expression: ((2 * 11) + (9 - 7))"}, {"input": "2 11 9 7\n", "output": "(11) + (7) = 18, left: (11 + 7) = 18, 2, 9\nroll back, left: 2 11 9 7\n(9) / (2) = 9/2, left: (9 / 2) = 9/2, 11, 7\nroll back, left: 2 11 9 7\n(2) / (9) = 2/9, left: (2 / 9) = 2/9, 11, 7\n(7) - (2/9) = 61/9, left: (7 - (2 / 9)) = 61/9, 11\n(11) + (61/9) = 160/9, left: (11 + (7 - (2 / 9))) = 160/9\nroll back, left: (7 - (2 / 9)) = 61/9, 11\nroll back, left: (2 / 9) = 2/9, 11, 7\nroll back, left: 2 11 9 7\n(2) * (9) = 18, left: (2 * 9) = 18, 11, 7\n(7) * (18) = 126, left: (7 * (2 * 9)) = 126, 11\nroll back, left: (2 * 9) = 18, 11, 7\nroll back, left: 2 11 9 7\n(11) - (9) = 2, left: (11 - 9) = 2, 2, 7\n(7) - (2) = 5, left: (7 - (11 - 9)) = 5, 2\nroll back, left: (11 - 9) = 2, 2, 7\nroll back, left: 2 11 9 7\n(9) - (11) = -2, left: (9 - 11) = -2, 2, 7\nroll back, left: 2 11 9 7\n(11) * (9) = 99, left: (11 * 9) = 99, 2, 7\nroll back, left: 2 11 9 7\n(11) + (9) = 20, left: (11 + 9) = 20, 2, 7\n(2) + (7) = 9, left: (2 + 7) = 9, (11 + 9) = 20\nroll back, left: (11 + 9) = 20, 2, 7\nroll back, left: 2 11 9 7\n(11) / (9) = 11/9, left: (11 / 9) = 11/9, 2, 7\nroll back, left: 2 11 9 7\n(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(22) / (7) = 22/7, left: ((2 * 11) / 7) = 22/7, 9\nroll back, left: (2 * 11) = 22, 9, 7\n(22) - (7) = 15, left: ((2 * 11) - 7) = 15, 9\n(9) + (15) = 24, left: (9 + ((2 * 11) - 7)) = 24\nreach 24! expression: (9 + ((2 * 11) - 7))"}, {"input": "2 11 9 7\n", "output": "(9) - (7) = 2, left: (9 - 7) = 2, 2, 11\n(2) - (11) = -9, left: ((9 - 7) - 11) = -9, 2\n(2) - (-9) = 11, left: (2 - ((9 - 7) - 11)) = 11\nroll back, left: ((9 - 7) - 11) = -9, 2\n(2) + (-9) = -7, left: (2 + ((9 - 7) - 11)) = -7\nroll back, left: ((9 - 7) - 11) = -9, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) + (2) = 13, left: (11 + (9 - 7)) = 13, 2\n(2) * (13) = 26, left: (2 * (11 + (9 - 7))) = 26\nroll back, left: (11 + (9 - 7)) = 13, 2\n(2) + (13) = 15, left: (2 + (11 + (9 - 7))) = 15\nroll back, left: (11 + (9 - 7)) = 13, 2\n(2) - (13) = -11, left: (2 - (11 + (9 - 7))) = -11\nroll back, left: (11 + (9 - 7)) = 13, 2\n(2) / (13) = 2/13, left: (2 / (11 + (9 - 7))) = 2/13\nroll back, left: (11 + (9 - 7)) = 13, 2\n(13) / (2) = 13/2, left: ((11 + (9 - 7)) / 2) = 13/2\nroll back, left: (11 + (9 - 7)) = 13, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(2) / (11) = 2/11, left: ((9 - 7) / 11) = 2/11, 2\n(2) + (2/11) = 24/11, left: (2 + ((9 - 7) / 11)) = 24/11\nroll back, left: ((9 - 7) / 11) = 2/11, 2\n(2/11) - (2) = -20/11, left: (((9 - 7) / 11) - 2) = -20/11\nroll back, left: ((9 - 7) / 11) = 2/11, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) - (2) = 9, left: (11 - (9 - 7)) = 9, 2\n(2) - (9) = -7, left: (2 - (11 - (9 - 7))) = -7\nroll back, left: (11 - (9 - 7)) = 9, 2\nroll back, left: (9 - 7) = 2, 2, 11\n(11) * (2) = 22, left: (11 * (9 - 7)) = 22, 2\n(22) - (2) = 20, left: ((11 * (9 - 7)) - 2) = 20\nroll back, left: (11 * (9 - 7)) = 22, 2\n(2) + (22) = 24, left: (2 + (11 * (9 - 7))) = 24\nreach 24! expression: (2 + (11 * (9 - 7)))"}, {"input": "2 11 9 7\n", "output": "(2) - (9) = -7, left: (2 - 9) = -7, 11, 7\nroll back, left: 2 11 9 7\n(9) / (2) = 9/2, left: (9 / 2) = 9/2, 11, 7\nroll back, left: 2 11 9 7\n(9) - (2) = 7, left: (9 - 2) = 7, 11, 7\nroll back, left: 2 11 9 7\n(2) + (9) = 11, left: (2 + 9) = 11, 11, 7\nroll back, left: 2 11 9 7\n(11) + (9) = 20, left: (11 + 9) = 20, 2, 7\nroll back, left: 2 11 9 7\n(9) / (11) = 9/11, left: (9 / 11) = 9/11, 2, 7\n(2) * (9/11) = 18/11, left: (2 * (9 / 11)) = 18/11, 7\nroll back, left: (9 / 11) = 9/11, 2, 7\nroll back, left: 2 11 9 7\n(11) * (9) = 99, left: (11 * 9) = 99, 2, 7\nroll back, left: 2 11 9 7\n(11) / (9) = 11/9, left: (11 / 9) = 11/9, 2, 7\n(11/9) / (2) = 11/18, left: ((11 / 9) / 2) = 11/18, 7\nroll back, left: (11 / 9) = 11/9, 2, 7\nroll back, left: 2 11 9 7\n(7) / (11) = 7/11, left: (7 / 11) = 7/11, 2, 9\n(2) + (7/11) = 29/11, left: (2 + (7 / 11)) = 29/11, 9\nroll back, left: (7 / 11) = 7/11, 2, 9\nroll back, left: 2 11 9 7\n(7) - (11) = -4, left: (7 - 11) = -4, 2, 9\nroll back, left: 2 11 9 7\n(9) / (7) = 9/7, left: (9 / 7) = 9/7, 2, 11\n(11) * (9/7) = 99/7, left: (11 * (9 / 7)) = 99/7, 2\nroll back, left: (9 / 7) = 9/7, 2, 11\nroll back, left: 2 11 9 7\n(7) - (9) = -2, left: (7 - 9) = -2, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (7 - 9) = -2\n(22) - (-2) = 24, left: ((2 * 11) - (7 - 9)) = 24\nreach 24! expression: ((2 * 11) - (7 - 9))"}, {"input": "2 11 9 7\n", "output": "(2) * (7) = 14, left: (2 * 7) = 14, 11, 9\nroll back, left: 2 11 9 7\n(2) - (7) = -5, left: (2 - 7) = -5, 11, 9\n(9) + (-5) = 4, left: (9 + (2 - 7)) = 4, 11\nroll back, left: (2 - 7) = -5, 11, 9\nroll back, left: 2 11 9 7\n(7) - (2) = 5, left: (7 - 2) = 5, 11, 9\nroll back, left: 2 11 9 7\n(7) / (2) = 7/2, left: (7 / 2) = 7/2, 11, 9\nroll back, left: 2 11 9 7\n(11) - (9) = 2, left: (11 - 9) = 2, 2, 7\n(7) - (2) = 5, left: (7 - 2) = 5, (11 - 9) = 2\nroll back, left: (11 - 9) = 2, 2, 7\nroll back, left: 2 11 9 7\n(9) / (11) = 9/11, left: (9 / 11) = 9/11, 2, 7\n(2) * (9/11) = 18/11, left: (2 * (9 / 11)) = 18/11, 7\nroll back, left: (9 / 11) = 9/11, 2, 7\nroll back, left: 2 11 9 7\n(11) / (9) = 11/9, left: (11 / 9) = 11/9, 2, 7\n(2) - (11/9) = 7/9, left: (2 - (11 / 9)) = 7/9, 7\nroll back, left: (11 / 9) = 11/9, 2, 7\nroll back, left: 2 11 9 7\n(9) - (11) = -2, left: (9 - 11) = -2, 2, 7\nroll back, left: 2 11 9 7\n(11) + (9) = 20, left: (11 + 9) = 20, 2, 7\nroll back, left: 2 11 9 7\n(7) - (11) = -4, left: (7 - 11) = -4, 2, 9\nroll back, left: 2 11 9 7\n(11) - (2) = 9, left: (11 - 2) = 9, 9, 7\nroll back, left: 2 11 9 7\n(2) * (11) = 22, left: (2 * 11) = 22, 9, 7\n(9) - (7) = 2, left: (9 - 7) = 2, (2 * 11) = 22\n(22) + (2) = 24, left: ((2 * 11) + (9 - 7)) = 24\nreach 24! expression: ((2 * 11) + (9 - 7))"}, {"input": "2 11 9 7\n", "output": "(9) * (7) = 63, left: (9 * 7) = 63, 2, 11\n(2) * (63) = 126, left: (2 * (9 * 7)) = 126, 11\n(126) / (11) = 126/11, left: ((2 * (9 * 7)) / 11) = 126/11\nroll back, left: (2 * (9 * 7)) = 126, 11\nroll back, left: (9 * 7) = 63, 2, 11\n(11) + (63) = 74, left: (11 + (9 * 7)) = 74, 2\n(2) + (74) = 76, left: (2 + (11 + (9 * 7))) = 76\nroll back, left: (11 + (9 * 7)) = 74, 2\nroll back, left: (9 * 7) = 63, 2, 11\n(2) - (11) = -9, left: (2 - 11) = -9, (9 * 7) = 63\nroll back, left: (9 * 7) = 63, 2, 11\nroll back, left: 2 11 9 7\n(9) + (7) = 16, left: (9 + 7) = 16, 2, 11\n(11) - (16) = -5, left: (11 - (9 + 7)) = -5, 2\nroll back, left: (9 + 7) = 16, 2, 11\n(11) * (16) = 176, left: (11 * (9 + 7)) = 176, 2\nroll back, left: (9 + 7) = 16, 2, 11\n(16) - (11) = 5, left: ((9 + 7) - 11) = 5, 2\nroll back, left: (9 + 7) = 16, 2, 11\n(16) / (11) = 16/11, left: ((9 + 7) / 11) = 16/11, 2\nroll back, left: (9 + 7) = 16, 2, 11\n(16) - (2) = 14, left: ((9 + 7) - 2) = 14, 11\nroll back, left: (9 + 7) = 16, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (9 + 7) = 16\n(16) * (22) = 352, left: ((9 + 7) * (2 * 11)) = 352\nroll back, left: (2 * 11) = 22, (9 + 7) = 16\nroll back, left: (9 + 7) = 16, 2, 11\n(11) - (2) = 9, left: (11 - 2) = 9, (9 + 7) = 16\nroll back, left: (9 + 7) = 16, 2, 11\nroll back, left: 2 11 9 7\n(7) - (9) = -2, left: (7 - 9) = -2, 2, 11\n(2) * (11) = 22, left: (2 * 11) = 22, (7 - 9) = -2\n(22) - (-2) = 24, left: ((2 * 11) - (7 - 9)) = 24\nreach 24! expression: ((2 * 11) - (7 - 9))"}, {"input": "13 12 11 6\n", "output": "(13) - (11) = 2, left: (13 - 11) = 2, 12, 6\n(6) * (2) = 12, left: (6 * (13 - 11)) = 12, 12\n(12) + (12) = 24, left: (12 + (6 * (13 - 11))) = 24\nreach 24! expression: (12 + (6 * (13 - 11)))"}]